{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "ALERT_DESCRIPTION_HANDSHAKE_FAILURE\tssl", "contents": "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"},
		{"trigger": "ALERT_DESCRIPTION_INTERNAL_ERROR\tssl", "contents": "ALERT_DESCRIPTION_INTERNAL_ERROR"},
		{"trigger": "CERT_NONE\tssl", "contents": "CERT_NONE"},
		{"trigger": "CERT_OPTIONAL\tssl", "contents": "CERT_OPTIONAL"},
		{"trigger": "CERT_REQUIRED\tssl", "contents": "CERT_REQUIRED"},
		{"trigger": "CHANNEL_BINDING_TYPES\tssl", "contents": "CHANNEL_BINDING_TYPES"},
		{"trigger": "CLIENT_AUTH\tssl", "contents": "CLIENT_AUTH"},
		{"trigger": "CertificateError\tssl", "contents": "CertificateError"},
		{"trigger": "DER_cert_to_PEM_cert\tssl", "contents": "DER_cert_to_PEM_cert(${1:DER_cert_bytes})"},
		{"trigger": "HAS_ALPN\tssl", "contents": "HAS_ALPN"},
		{"trigger": "HAS_ECDH\tssl", "contents": "HAS_ECDH"},
		{"trigger": "HAS_NPN\tssl", "contents": "HAS_NPN"},
		{"trigger": "HAS_SNI\tssl", "contents": "HAS_SNI"},
		{"trigger": "MemoryBIO\tssl", "contents": "MemoryBIO"},
		{"trigger": "OPENSSL_VERSION\tssl", "contents": "OPENSSL_VERSION"},
		{"trigger": "OPENSSL_VERSION_INFO\tssl", "contents": "OPENSSL_VERSION_INFO"},
		{"trigger": "OPENSSL_VERSION_NUMBER\tssl", "contents": "OPENSSL_VERSION_NUMBER"},
		{"trigger": "OP_ALL\tssl", "contents": "OP_ALL"},
		{"trigger": "OP_CIPHER_SERVER_PREFERENCE\tssl", "contents": "OP_CIPHER_SERVER_PREFERENCE"},
		{"trigger": "OP_NO_COMPRESSION\tssl", "contents": "OP_NO_COMPRESSION"},
		{"trigger": "OP_NO_SSLv2\tssl", "contents": "OP_NO_SSLv2"},
		{"trigger": "OP_NO_SSLv3\tssl", "contents": "OP_NO_SSLv3"},
		{"trigger": "OP_NO_TLSv1\tssl", "contents": "OP_NO_TLSv1"},
		{"trigger": "OP_NO_TLSv1_1\tssl", "contents": "OP_NO_TLSv1_1"},
		{"trigger": "OP_NO_TLSv1_2\tssl", "contents": "OP_NO_TLSv1_2"},
		{"trigger": "OP_SINGLE_DH_USE\tssl", "contents": "OP_SINGLE_DH_USE"},
		{"trigger": "OP_SINGLE_ECDH_USE\tssl", "contents": "OP_SINGLE_ECDH_USE"},
		{"trigger": "PEM_cert_to_DER_cert\tssl", "contents": "PEM_cert_to_DER_cert(${1:PEM_cert_string})"},
		{"trigger": "PROTOCOL_SSLv23\tssl", "contents": "PROTOCOL_SSLv23"},
		{"trigger": "PROTOCOL_SSLv2\tssl", "contents": "PROTOCOL_SSLv2"},
		{"trigger": "PROTOCOL_SSLv3\tssl", "contents": "PROTOCOL_SSLv3"},
		{"trigger": "PROTOCOL_TLSv1\tssl", "contents": "PROTOCOL_TLSv1"},
		{"trigger": "PROTOCOL_TLSv1_1\tssl", "contents": "PROTOCOL_TLSv1_1"},
		{"trigger": "PROTOCOL_TLSv1_2\tssl", "contents": "PROTOCOL_TLSv1_2"},
		{"trigger": "RAND_add\tssl", "contents": "RAND_add(${1:bytes}, ${2:entropy})"},
		{"trigger": "RAND_bytes\tssl", "contents": "RAND_bytes(${1:num})"},
		{"trigger": "RAND_egd\tssl", "contents": "RAND_egd(${1:path})"},
		{"trigger": "RAND_pseudo_bytes\tssl", "contents": "RAND_pseudo_bytes(${1:num})"},
		{"trigger": "RAND_status\tssl", "contents": "RAND_status(${1:})"},
		{"trigger": "SERVER_AUTH\tssl", "contents": "SERVER_AUTH"},
		{"trigger": "SSLContext\tssl", "contents": "SSLContext(${1:protocol})"},
		{"trigger": "SSLEOFError\tssl", "contents": "SSLEOFError"},
		{"trigger": "SSLError\tssl", "contents": "SSLError"},
		{"trigger": "SSLObject\tssl", "contents": "SSLObject"},
		{"trigger": "SSLSocket\tssl", "contents": "SSLSocket(${1:socket.socket})"},
		{"trigger": "SSLSyscallError\tssl", "contents": "SSLSyscallError"},
		{"trigger": "SSLWantReadError\tssl", "contents": "SSLWantReadError"},
		{"trigger": "SSLWantWriteError\tssl", "contents": "SSLWantWriteError"},
		{"trigger": "SSLZeroReturnError\tssl", "contents": "SSLZeroReturnError"},
		{"trigger": "VERIFY_CRL_CHECK_CHAIN\tssl", "contents": "VERIFY_CRL_CHECK_CHAIN"},
		{"trigger": "VERIFY_CRL_CHECK_LEAF\tssl", "contents": "VERIFY_CRL_CHECK_LEAF"},
		{"trigger": "VERIFY_DEFAULT\tssl", "contents": "VERIFY_DEFAULT"},
		{"trigger": "VERIFY_X509_STRICT\tssl", "contents": "VERIFY_X509_STRICT"},
		{"trigger": "VERIFY_X509_TRUSTED_FIRST\tssl", "contents": "VERIFY_X509_TRUSTED_FIRST"},
		{"trigger": "cert_store_stats()\tssl", "contents": "cert_store_stats(${1:})"},
		{"trigger": "cert_time_to_seconds()\tssl", "contents": "cert_time_to_seconds(${1:cert_time})"},
		{"trigger": "check_hostname()\tssl", "contents": "check_hostname()"},
		{"trigger": "cipher()\tssl", "contents": "cipher(${1:})"},
		{"trigger": "compression()\tssl", "contents": "compression(${1:})"},
		{"trigger": "context()\tssl", "contents": "context()"},
		{"trigger": "create_default_context()\tssl", "contents": "create_default_context(${1:purpose=Purpose.SERVER_AUTH}, ${2:cafile=None}, ${3:capath=None}, ${4:cadata=None})"},
		{"trigger": "do_handshake()\tssl", "contents": "do_handshake(${1:})"},
		{"trigger": "enum_certificates()\tssl", "contents": "enum_certificates(${1:store_name})"},
		{"trigger": "enum_crls()\tssl", "contents": "enum_crls(${1:store_name})"},
		{"trigger": "get_ca_certs()\tssl", "contents": "get_ca_certs(${1:binary_form=False})"},
		{"trigger": "get_channel_binding()\tssl", "contents": "get_channel_binding(${1:cb_type=\"tls-unique\"})"},
		{"trigger": "get_default_verify_paths()\tssl", "contents": "get_default_verify_paths(${1:})"},
		{"trigger": "get_server_certificate()\tssl", "contents": "get_server_certificate(${1:addr}, ${2:ssl_version=PROTOCOL_SSLv23}, ${3:ca_certs=None})"},
		{"trigger": "getpeercert()\tssl", "contents": "getpeercert(${1:binary_form=False})"},
		{"trigger": "load_cert_chain()\tssl", "contents": "load_cert_chain(${1:certfile}, ${2:keyfile=None}, ${3:password=None})"},
		{"trigger": "load_default_certs()\tssl", "contents": "load_default_certs(${1:purpose=Purpose.SERVER_AUTH})"},
		{"trigger": "load_dh_params()\tssl", "contents": "load_dh_params(${1:dhfile})"},
		{"trigger": "load_verify_locations()\tssl", "contents": "load_verify_locations(${1:cafile=None}, ${2:capath=None}, ${3:cadata=None})"},
		{"trigger": "match_hostname()\tssl", "contents": "match_hostname(${1:cert}, ${2:hostname})"},
		{"trigger": "options()\tssl", "contents": "options()"},
		{"trigger": "pending()\tssl", "contents": "pending(${1:})"},
		{"trigger": "protocol()\tssl", "contents": "protocol()"},
		{"trigger": "read()\tssl", "contents": "read(${1:len=0}, ${2:buffer=None})"},
		{"trigger": "selected_alpn_protocol()\tssl", "contents": "selected_alpn_protocol(${1:})"},
		{"trigger": "selected_npn_protocol()\tssl", "contents": "selected_npn_protocol(${1:})"},
		{"trigger": "server_hostname()\tssl", "contents": "server_hostname()"},
		{"trigger": "server_side()\tssl", "contents": "server_side()"},
		{"trigger": "session_stats()\tssl", "contents": "session_stats(${1:})"},
		{"trigger": "set_alpn_protocols()\tssl", "contents": "set_alpn_protocols(${1:protocols})"},
		{"trigger": "set_ciphers()\tssl", "contents": "set_ciphers(${1:ciphers})"},
		{"trigger": "set_default_verify_paths()\tssl", "contents": "set_default_verify_paths(${1:})"},
		{"trigger": "set_ecdh_curve()\tssl", "contents": "set_ecdh_curve(${1:curve_name})"},
		{"trigger": "set_npn_protocols()\tssl", "contents": "set_npn_protocols(${1:protocols})"},
		{"trigger": "set_servername_callback()\tssl", "contents": "set_servername_callback(${1:server_name_callback})"},
		{"trigger": "shared_ciphers()\tssl", "contents": "shared_ciphers(${1:})"},
		{"trigger": "unwrap()\tssl", "contents": "unwrap(${1:})"},
		{"trigger": "verify_flags()\tssl", "contents": "verify_flags()"},
		{"trigger": "verify_mode()\tssl", "contents": "verify_mode()"},
		{"trigger": "version()\tssl", "contents": "version(${1:})"},
		{"trigger": "wrap_bio()\tssl", "contents": "wrap_bio(${1:incoming}, ${2:outgoing}, ${3:server_side=False}, ${4:server_hostname=None})"},
		{"trigger": "wrap_socket()\tssl", "contents": "wrap_socket(${1:sock}, ${2:keyfile=None}, ${3:certfile=None}, ${4:server_side=False}, ${5:cert_reqs=CERT_NONE}, ${6:ssl_version={see docs}}, ${7:ca_certs=None}, ${8:do_handshake_on_connect=True}, ${9:suppress_ragged_eofs=True}, ${10:ciphers=None})"},
		{"trigger": "wrap_socket()\tssl", "contents": "wrap_socket(${1:sock}, ${2:server_side=False}, ${3:do_handshake_on_connect=True}, ${4:suppress_ragged_eofs=True}, ${5:server_hostname=None})"},
		{"trigger": "write()\tssl", "contents": "write(${1:buf})"}
	]
}