{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "ALT_DIGITS\tlocale", "contents": "ALT_DIGITS"},
		{"trigger": "CHAR_MAX\tlocale", "contents": "CHAR_MAX"},
		{"trigger": "CODESET\tlocale", "contents": "CODESET"},
		{"trigger": "CRNCYSTR\tlocale", "contents": "CRNCYSTR"},
		{"trigger": "D_FMT\tlocale", "contents": "D_FMT"},
		{"trigger": "D_T_FMT\tlocale", "contents": "D_T_FMT"},
		{"trigger": "ERA\tlocale", "contents": "ERA"},
		{"trigger": "ERA_D_FMT\tlocale", "contents": "ERA_D_FMT"},
		{"trigger": "ERA_D_T_FMT\tlocale", "contents": "ERA_D_T_FMT"},
		{"trigger": "ERA_T_FMT\tlocale", "contents": "ERA_T_FMT"},
		{"trigger": "Error\tlocale", "contents": "Error"},
		{"trigger": "LC_ALL\tlocale", "contents": "LC_ALL"},
		{"trigger": "LC_COLLATE\tlocale", "contents": "LC_COLLATE"},
		{"trigger": "LC_CTYPE\tlocale", "contents": "LC_CTYPE"},
		{"trigger": "LC_MESSAGES\tlocale", "contents": "LC_MESSAGES"},
		{"trigger": "LC_MONETARY\tlocale", "contents": "LC_MONETARY"},
		{"trigger": "LC_NUMERIC\tlocale", "contents": "LC_NUMERIC"},
		{"trigger": "LC_TIME\tlocale", "contents": "LC_TIME"},
		{"trigger": "NOEXPR\tlocale", "contents": "NOEXPR"},
		{"trigger": "RADIXCHAR\tlocale", "contents": "RADIXCHAR"},
		{"trigger": "THOUSEP\tlocale", "contents": "THOUSEP"},
		{"trigger": "T_FMT\tlocale", "contents": "T_FMT"},
		{"trigger": "T_FMT_AMPM\tlocale", "contents": "T_FMT_AMPM"},
		{"trigger": "YESEXPR\tlocale", "contents": "YESEXPR"},
		{"trigger": "atof()\tlocale", "contents": "atof(${1:string})"},
		{"trigger": "atoi()\tlocale", "contents": "atoi(${1:string})"},
		{"trigger": "currency()\tlocale", "contents": "currency(${1:val}, ${2:symbol=True}, ${3:grouping=False}, ${4:international=False})"},
		{"trigger": "delocalize()\tlocale", "contents": "delocalize(${1:string})"},
		{"trigger": "format()\tlocale", "contents": "format(${0:format}, ${2:val}, ${3:grouping=False}, ${4:monetary=False})"},
		{"trigger": "format_string()\tlocale", "contents": "format_string(${1:format}, ${2:val}, ${3:grouping=False})"},
		{"trigger": "getdefaultlocale()\tlocale", "contents": "getdefaultlocale(${1:[envvars]})"},
		{"trigger": "getlocale()\tlocale", "contents": "getlocale(${1:category=LC_CTYPE})"},
		{"trigger": "getpreferredencoding()\tlocale", "contents": "getpreferredencoding(${1:do_setlocale=True})"},
		{"trigger": "localeconv()\tlocale", "contents": "localeconv(${1:})"},
		{"trigger": "nl_langinfo()\tlocale", "contents": "nl_langinfo(${1:option})"},
		{"trigger": "normalize()\tlocale", "contents": "normalize(${1:localename})"},
		{"trigger": "resetlocale()\tlocale", "contents": "resetlocale(${1:category=LC_ALL})"},
		{"trigger": "setlocale()\tlocale", "contents": "setlocale(${1:category}, ${2:locale=None})"},
		{"trigger": "str()\tlocale", "contents": "str(${1:float})"},
		{"trigger": "strcoll()\tlocale", "contents": "strcoll(${1:string1}, ${2:string2})"},
		{"trigger": "strxfrm()\tlocale", "contents": "strxfrm(${1:string})"}
	]
}