{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "BadStatusLine\thttp", "contents": "BadStatusLine"},
		{"trigger": "CannotSendHeader\thttp", "contents": "CannotSendHeader"},
		{"trigger": "CannotSendRequest\thttp", "contents": "CannotSendRequest"},
		{"trigger": "HTTPConnection\thttp", "contents": "HTTPConnection(${1:host}, ${2:port=None}, ${3:[timeout}, ${4:]source_address=None})"},
		{"trigger": "HTTPException\thttp", "contents": "HTTPException"},
		{"trigger": "HTTPResponse\thttp", "contents": "HTTPResponse(${1:sock}, ${2:debuglevel=0}, ${3:method=None}, ${4:url=None})"},
		{"trigger": "HTTPSConnection\thttp", "contents": "HTTPSConnection(${1:host}, ${2:port=None}, ${3:key_file=None}, ${4:cert_file=None}, ${5:[timeout}, ${6:]source_address=None}, ${7:*}, ${8:context=None}, ${9:check_hostname=None})"},
		{"trigger": "HTTPS_PORT\thttp", "contents": "HTTPS_PORT"},
		{"trigger": "HTTP_PORT\thttp", "contents": "HTTP_PORT"},
		{"trigger": "ImproperConnectionState\thttp", "contents": "ImproperConnectionState"},
		{"trigger": "IncompleteRead\thttp", "contents": "IncompleteRead"},
		{"trigger": "InvalidURL\thttp", "contents": "InvalidURL"},
		{"trigger": "LineTooLong\thttp", "contents": "LineTooLong"},
		{"trigger": "NotConnected\thttp", "contents": "NotConnected"},
		{"trigger": "RemoteDisconnected\thttp", "contents": "RemoteDisconnected"},
		{"trigger": "ResponseNotReady\thttp", "contents": "ResponseNotReady"},
		{"trigger": "UnimplementedFileMode\thttp", "contents": "UnimplementedFileMode"},
		{"trigger": "UnknownProtocol\thttp", "contents": "UnknownProtocol"},
		{"trigger": "UnknownTransferEncoding\thttp", "contents": "UnknownTransferEncoding"},
		{"trigger": "close()\thttp", "contents": "close(${1:})"},
		{"trigger": "closed()\thttp", "contents": "closed()"},
		{"trigger": "connect()\thttp", "contents": "connect(${1:})"},
		{"trigger": "debuglevel()\thttp", "contents": "debuglevel()"},
		{"trigger": "endheaders()\thttp", "contents": "endheaders(${1:message_body=None})"},
		{"trigger": "fileno()\thttp", "contents": "fileno(${1:})"},
		{"trigger": "getheader()\thttp", "contents": "getheader(${1:name}, ${2:default=None})"},
		{"trigger": "getheaders()\thttp", "contents": "getheaders(${1:})"},
		{"trigger": "getresponse()\thttp", "contents": "getresponse(${1:})"},
		{"trigger": "msg()\thttp", "contents": "msg()"},
		{"trigger": "putheader()\thttp", "contents": "putheader(${1:header}, ${2:argument[}, ${3:...]})"},
		{"trigger": "putrequest()\thttp", "contents": "putrequest(${1:request}, ${2:selector}, ${3:skip_host=False}, ${4:skip_accept_encoding=False})"},
		{"trigger": "read()\thttp", "contents": "read(${1:[amt]})"},
		{"trigger": "readinto()\thttp", "contents": "readinto(${1:b})"},
		{"trigger": "reason()\thttp", "contents": "reason()"},
		{"trigger": "request()\thttp", "contents": "request(${1:method}, ${2:url}, ${3:body=None}, ${4:headers={}})"},
		{"trigger": "responses()\thttp", "contents": "responses()"},
		{"trigger": "send()\thttp", "contents": "send(${1:data})"},
		{"trigger": "set_debuglevel()\thttp", "contents": "set_debuglevel(${1:level})"},
		{"trigger": "set_tunnel()\thttp", "contents": "set_tunnel(${1:host}, ${2:port=None}, ${3:headers=None})"},
		{"trigger": "status()\thttp", "contents": "status()"},
		{"trigger": "version()\thttp", "contents": "version()"}
	]
}