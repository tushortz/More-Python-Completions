{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "MAXYEAR\tdatetime", "contents": "MAXYEAR"},
		{"trigger": "MINYEAR\tdatetime", "contents": "MINYEAR"},
		{"trigger": "__format__()\tdatetime", "contents": "__format__(${1:format})"},
		{"trigger": "__str__()\tdatetime", "contents": "__str__(${1:})"},
		{"trigger": "astimezone()\tdatetime", "contents": "astimezone(${1:tz=None})"},
		{"trigger": "combine()\tdatetime", "contents": "combine(${1:date}, ${2:time})"},
		{"trigger": "ctime()\tdatetime", "contents": "ctime(${1:})"},
		{"trigger": "date An idealized naive date()\tdatetime", "contents": "date An idealized naive date(${1:assuming the current Gregorian calendar always was}, ${2:and always will be}, ${3:in effect. Attributes: })"},
		{"trigger": "date()\tdatetime", "contents": "date(${1:year}, ${2:month}, ${3:day})"},
		{"trigger": "date()\tdatetime", "contents": "date(${1:})"},
		{"trigger": "datetime A combination of a date and a time. Attributes: ()\tdatetime", "contents": "datetime A combination of a date and a time. Attributes: ()"},
		{"trigger": "datetime()\tdatetime", "contents": "datetime(${1:year}, ${2:month}, ${3:day}, ${4:hour=0}, ${5:minute=0}, ${6:second=0}, ${7:microsecond=0}, ${8:tzinfo=None})"},
		{"trigger": "day()\tdatetime", "contents": "day()"},
		{"trigger": "dst()\tdatetime", "contents": "dst(${1:dt})"},
		{"trigger": "dst()\tdatetime", "contents": "dst(${1:})"},
		{"trigger": "fromordinal()\tdatetime", "contents": "fromordinal(${1:ordinal})"},
		{"trigger": "fromtimestamp()\tdatetime", "contents": "fromtimestamp(${1:timestamp}, ${2:tz=None})"},
		{"trigger": "fromtimestamp()\tdatetime", "contents": "fromtimestamp(${1:timestamp})"},
		{"trigger": "fromutc()\tdatetime", "contents": "fromutc(${1:dt})"},
		{"trigger": "hour()\tdatetime", "contents": "hour()"},
		{"trigger": "isocalendar()\tdatetime", "contents": "isocalendar(${1:})"},
		{"trigger": "isoformat()\tdatetime", "contents": "isoformat(${1:sep='T'})"},
		{"trigger": "isoformat()\tdatetime", "contents": "isoformat(${1:})"},
		{"trigger": "isoweekday()\tdatetime", "contents": "isoweekday(${1:})"},
		{"trigger": "max()\tdatetime", "contents": "max()"},
		{"trigger": "microsecond()\tdatetime", "contents": "microsecond()"},
		{"trigger": "min()\tdatetime", "contents": "min()"},
		{"trigger": "minute()\tdatetime", "contents": "minute()"},
		{"trigger": "month()\tdatetime", "contents": "month()"},
		{"trigger": "now()\tdatetime", "contents": "now(${1:tz=None})"},
		{"trigger": "replace()\tdatetime", "contents": "replace(${1:year}, ${2:month}, ${3:day})"},
		{"trigger": "replace()\tdatetime", "contents": "replace(${1:[hour[}, ${2:minute[}, ${3:second[}, ${4:microsecond[}, ${5:tzinfo]]]]]})"},
		{"trigger": "replace()\tdatetime", "contents": "replace(${1:[year[}, ${2:month[}, ${3:day[}, ${4:hour[}, ${5:minute[}, ${6:second[}, ${7:microsecond[}, ${8:tzinfo]]]]]]]]})"},
		{"trigger": "resolution()\tdatetime", "contents": "resolution()"},
		{"trigger": "second()\tdatetime", "contents": "second()"},
		{"trigger": "strftime()\tdatetime", "contents": "strftime(${1:format})"},
		{"trigger": "strptime()\tdatetime", "contents": "strptime(${1:date_string}, ${2:format})"},
		{"trigger": "time An idealized time()\tdatetime", "contents": "time An idealized time(${1:independent of any particular day}, ${2:assuming that every day has exactly 24*60*60 seconds }, ${3:there is no notion of \"leap seconds\" here})"},
		{"trigger": "time()\tdatetime", "contents": "time(${1:hour=0}, ${2:minute=0}, ${3:second=0}, ${4:microsecond=0}, ${5:tzinfo=None})"},
		{"trigger": "time()\tdatetime", "contents": "time(${1:})"},
		{"trigger": "timedelta A duration expressing the difference between two ()\tdatetime", "contents": "timedelta A duration expressing the difference between two ()"},
		{"trigger": "timedelta()\tdatetime", "contents": "timedelta(${1:days=0}, ${2:seconds=0}, ${3:microseconds=0}, ${4:milliseconds=0}, ${5:minutes=0}, ${6:hours=0}, ${7:weeks=0})"},
		{"trigger": "timestamp()\tdatetime", "contents": "timestamp(${1:})"},
		{"trigger": "timetuple()\tdatetime", "contents": "timetuple(${1:})"},
		{"trigger": "timetz()\tdatetime", "contents": "timetz(${1:})"},
		{"trigger": "timezone()\tdatetime", "contents": "timezone()"},
		{"trigger": "timezone()\tdatetime", "contents": "timezone(${1:offset[}, ${2:name]})"},
		{"trigger": "today()\tdatetime", "contents": "today(${1:})"},
		{"trigger": "toordinal()\tdatetime", "contents": "toordinal(${1:})"},
		{"trigger": "total_seconds()\tdatetime", "contents": "total_seconds(${1:})"},
		{"trigger": "tzinfo()\tdatetime", "contents": "tzinfo()"},
		{"trigger": "tzname()\tdatetime", "contents": "tzname(${1:dt})"},
		{"trigger": "tzname()\tdatetime", "contents": "tzname(${1:})"},
		{"trigger": "utc()\tdatetime", "contents": "utc()"},
		{"trigger": "utcfromtimestamp()\tdatetime", "contents": "utcfromtimestamp(${1:timestamp})"},
		{"trigger": "utcnow()\tdatetime", "contents": "utcnow(${1:})"},
		{"trigger": "utcoffset()\tdatetime", "contents": "utcoffset(${1:dt})"},
		{"trigger": "utcoffset()\tdatetime", "contents": "utcoffset(${1:})"},
		{"trigger": "utctimetuple()\tdatetime", "contents": "utctimetuple(${1:})"},
		{"trigger": "weekday()\tdatetime", "contents": "weekday(${1:})"},
		{"trigger": "year()\tdatetime", "contents": "year()"}
	]
}