{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "AbstractBasicAuthHandler\turllib", "contents": "AbstractBasicAuthHandler(${1:password_mgr=None})"},
		{"trigger": "AbstractDigestAuthHandler\turllib", "contents": "AbstractDigestAuthHandler(${1:password_mgr=None})"},
		{"trigger": "BaseHandler\turllib", "contents": "BaseHandler"},
		{"trigger": "CacheFTPHandler\turllib", "contents": "CacheFTPHandler"},
		{"trigger": "DataHandler\turllib", "contents": "DataHandler"},
		{"trigger": "FTPHandler\turllib", "contents": "FTPHandler"},
		{"trigger": "FancyURLopener\turllib", "contents": "FancyURLopener(${1:...})"},
		{"trigger": "FileHandler\turllib", "contents": "FileHandler"},
		{"trigger": "HTTPBasicAuthHandler\turllib", "contents": "HTTPBasicAuthHandler(${1:password_mgr=None})"},
		{"trigger": "HTTPCookieProcessor\turllib", "contents": "HTTPCookieProcessor(${1:cookiejar=None})"},
		{"trigger": "HTTPDefaultErrorHandler\turllib", "contents": "HTTPDefaultErrorHandler"},
		{"trigger": "HTTPDigestAuthHandler\turllib", "contents": "HTTPDigestAuthHandler(${1:password_mgr=None})"},
		{"trigger": "HTTPErrorProcessor\turllib", "contents": "HTTPErrorProcessor"},
		{"trigger": "HTTPHandler\turllib", "contents": "HTTPHandler"},
		{"trigger": "HTTPPasswordMgr\turllib", "contents": "HTTPPasswordMgr"},
		{"trigger": "HTTPPasswordMgrWithDefaultRealm\turllib", "contents": "HTTPPasswordMgrWithDefaultRealm"},
		{"trigger": "HTTPPasswordMgrWithPriorAuth\turllib", "contents": "HTTPPasswordMgrWithPriorAuth"},
		{"trigger": "HTTPRedirectHandler\turllib", "contents": "HTTPRedirectHandler"},
		{"trigger": "HTTPSHandler\turllib", "contents": "HTTPSHandler(${1:debuglevel=0}, ${2:context=None}, ${3:check_hostname=None})"},
		{"trigger": "OpenerDirector\turllib", "contents": "OpenerDirector"},
		{"trigger": "ProxyBasicAuthHandler\turllib", "contents": "ProxyBasicAuthHandler(${1:password_mgr=None})"},
		{"trigger": "ProxyDigestAuthHandler\turllib", "contents": "ProxyDigestAuthHandler(${1:password_mgr=None})"},
		{"trigger": "ProxyHandler\turllib", "contents": "ProxyHandler(${1:proxies=None})"},
		{"trigger": "Request\turllib", "contents": "Request(${1:url}, ${2:data=None}, ${3:headers={}}, ${4:origin_req_host=None}, ${5:unverifiable=False}, ${6:method=None})"},
		{"trigger": "URLopener\turllib", "contents": "URLopener(${1:proxies=None}, ${2:**x509})"},
		{"trigger": "UnknownHandler\turllib", "contents": "UnknownHandler"},
		{"trigger": "add_handler()\turllib", "contents": "add_handler(${1:handler})"},
		{"trigger": "add_header()\turllib", "contents": "add_header(${1:key}, ${2:val})"},
		{"trigger": "add_parent()\turllib", "contents": "add_parent(${1:director})"},
		{"trigger": "add_password()\turllib", "contents": "add_password(${1:realm}, ${2:uri}, ${3:user}, ${4:passwd}, ${5:is_authenticated=False})"},
		{"trigger": "add_password()\turllib", "contents": "add_password(${1:realm}, ${2:uri}, ${3:user}, ${4:passwd})"},
		{"trigger": "add_unredirected_header()\turllib", "contents": "add_unredirected_header(${1:key}, ${2:header})"},
		{"trigger": "build_opener()\turllib", "contents": "build_opener(${1:[handler}, ${2:...]})"},
		{"trigger": "close()\turllib", "contents": "close(${1:})"},
		{"trigger": "cookiejar()\turllib", "contents": "cookiejar()"},
		{"trigger": "data()\turllib", "contents": "data()"},
		{"trigger": "data_open()\turllib", "contents": "data_open(${1:req})"},
		{"trigger": "default_open()\turllib", "contents": "default_open(${1:req})"},
		{"trigger": "error()\turllib", "contents": "error(${1:proto}, ${2:*args})"},
		{"trigger": "file_open()\turllib", "contents": "file_open(${1:req})"},
		{"trigger": "find_user_password()\turllib", "contents": "find_user_password(${1:realm}, ${2:authuri})"},
		{"trigger": "find_user_password()\turllib", "contents": "find_user_password(${1:realm}, ${2:authuri})"},
		{"trigger": "ftp_open()\turllib", "contents": "ftp_open(${1:req})"},
		{"trigger": "full_url()\turllib", "contents": "full_url()"},
		{"trigger": "get_full_url()\turllib", "contents": "get_full_url(${1:})"},
		{"trigger": "get_header()\turllib", "contents": "get_header(${1:header_name}, ${2:default=None})"},
		{"trigger": "get_method()\turllib", "contents": "get_method(${1:})"},
		{"trigger": "getproxies()\turllib", "contents": "getproxies(${1:})"},
		{"trigger": "has_header()\turllib", "contents": "has_header(${1:header})"},
		{"trigger": "header_items()\turllib", "contents": "header_items(${1:})"},
		{"trigger": "host()\turllib", "contents": "host()"},
		{"trigger": "http_error_301()\turllib", "contents": "http_error_301(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_error_302()\turllib", "contents": "http_error_302(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_error_303()\turllib", "contents": "http_error_303(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_error_307()\turllib", "contents": "http_error_307(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_error_401()\turllib", "contents": "http_error_401(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_error_407()\turllib", "contents": "http_error_407(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_error_auth_reqed()\turllib", "contents": "http_error_auth_reqed(${1:authreq}, ${2:host}, ${3:req}, ${4:headers})"},
		{"trigger": "http_error_default()\turllib", "contents": "http_error_default(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_error_nnn()\turllib", "contents": "http_error_nnn(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "http_open()\turllib", "contents": "http_open(${1:req})"},
		{"trigger": "http_response()\turllib", "contents": "http_response(${1:})"},
		{"trigger": "https_open()\turllib", "contents": "https_open(${1:req})"},
		{"trigger": "https_response()\turllib", "contents": "https_response(${1:})"},
		{"trigger": "install_opener()\turllib", "contents": "install_opener(${1:opener})"},
		{"trigger": "is_authenticated()\turllib", "contents": "is_authenticated(${1:self}, ${2:authuri})"},
		{"trigger": "method()\turllib", "contents": "method()"},
		{"trigger": "open()\turllib", "contents": "open(${1:url}, ${2:data=None[}, ${3:timeout]})"},
		{"trigger": "origin_req_host()\turllib", "contents": "origin_req_host()"},
		{"trigger": "parent()\turllib", "contents": "parent()"},
		{"trigger": "pathname2url()\turllib", "contents": "pathname2url(${1:path})"},
		{"trigger": "protocol_open()\turllib", "contents": "protocol_open(${1:req})"},
		{"trigger": "protocol_open()\turllib", "contents": "protocol_open(${1:request})"},
		{"trigger": "protocol_request()\turllib", "contents": "protocol_request(${1:req})"},
		{"trigger": "protocol_response()\turllib", "contents": "protocol_response(${1:req}, ${2:response})"},
		{"trigger": "redirect_request()\turllib", "contents": "redirect_request(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs}, ${6:newurl})"},
		{"trigger": "remove_header()\turllib", "contents": "remove_header(${1:header})"},
		{"trigger": "selector()\turllib", "contents": "selector()"},
		{"trigger": "setMaxConns()\turllib", "contents": "setMaxConns(${1:m})"},
		{"trigger": "setTimeout()\turllib", "contents": "setTimeout(${1:t})"},
		{"trigger": "set_proxy()\turllib", "contents": "set_proxy(${1:host}, ${2:type})"},
		{"trigger": "type()\turllib", "contents": "type()"},
		{"trigger": "unknown_open()\turllib", "contents": "unknown_open(${1:req})"},
		{"trigger": "unknown_open()\turllib", "contents": "unknown_open(${1:})"},
		{"trigger": "unverifiable()\turllib", "contents": "unverifiable()"},
		{"trigger": "update_authenticated()\turllib", "contents": "update_authenticated(${1:self}, ${2:uri}, ${3:is_authenticated=False})"},
		{"trigger": "url2pathname()\turllib", "contents": "url2pathname(${1:path})"},
		{"trigger": "urlcleanup()\turllib", "contents": "urlcleanup(${1:})"},
		{"trigger": "urlopen()\turllib", "contents": "urlopen(${1:url}, ${2:data=None}, ${3:[timeout}, ${4:]*}, ${5:cafile=None}, ${6:capath=None}, ${7:cadefault=False}, ${8:context=None})"},
		{"trigger": "urlretrieve()\turllib", "contents": "urlretrieve(${1:url}, ${2:filename=None}, ${3:reporthook=None}, ${4:data=None})"}
	]
}