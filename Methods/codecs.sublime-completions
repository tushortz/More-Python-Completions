{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "BOM\tcodecs", "contents": "BOM"},
		{"trigger": "BOM_BE\tcodecs", "contents": "BOM_BE"},
		{"trigger": "BOM_LE\tcodecs", "contents": "BOM_LE"},
		{"trigger": "BOM_UTF16\tcodecs", "contents": "BOM_UTF16"},
		{"trigger": "BOM_UTF16_BE\tcodecs", "contents": "BOM_UTF16_BE"},
		{"trigger": "BOM_UTF16_LE\tcodecs", "contents": "BOM_UTF16_LE"},
		{"trigger": "BOM_UTF32\tcodecs", "contents": "BOM_UTF32"},
		{"trigger": "BOM_UTF32_BE\tcodecs", "contents": "BOM_UTF32_BE"},
		{"trigger": "BOM_UTF32_LE\tcodecs", "contents": "BOM_UTF32_LE"},
		{"trigger": "BOM_UTF8\tcodecs", "contents": "BOM_UTF8"},
		{"trigger": "CodecInfo\tcodecs", "contents": "CodecInfo(${1:encode}, ${2:decode}, ${3:streamreader=None}, ${4:streamwriter=None}, ${5:incrementalencoder=None}, ${6:incrementaldecoder=None}, ${7:name=None})"},
		{"trigger": "EncodedFile\tcodecs", "contents": "EncodedFile(${1:file}, ${2:data_encoding}, ${3:file_encoding=None}, ${4:errors='strict'})"},
		{"trigger": "IncrementalDecoder\tcodecs", "contents": "IncrementalDecoder(${1:errors='strict'})"},
		{"trigger": "IncrementalEncoder\tcodecs", "contents": "IncrementalEncoder(${1:errors='strict'})"},
		{"trigger": "StreamReader\tcodecs", "contents": "StreamReader(${1:stream}, ${2:errors='strict'})"},
		{"trigger": "StreamReaderWriter\tcodecs", "contents": "StreamReaderWriter(${1:stream}, ${2:Reader}, ${3:Writer}, ${4:errors})"},
		{"trigger": "StreamRecoder\tcodecs", "contents": "StreamRecoder(${1:stream}, ${2:encode}, ${3:decode}, ${4:Reader}, ${5:Writer}, ${6:errors})"},
		{"trigger": "StreamWriter\tcodecs", "contents": "StreamWriter(${1:stream}, ${2:errors='strict'})"},
		{"trigger": "ToASCII\tcodecs", "contents": "ToASCII(${1:label})"},
		{"trigger": "ToUnicode\tcodecs", "contents": "ToUnicode(${1:label})"},
		{"trigger": "backslashreplace_errors()\tcodecs", "contents": "backslashreplace_errors(${1:exception})"},
		{"trigger": "decode()\tcodecs", "contents": "decode(${1:input[}, ${2:errors]})"},
		{"trigger": "decode()\tcodecs", "contents": "decode(${1:obj}, ${2:encoding='utf-8'}, ${3:errors='strict'})"},
		{"trigger": "encode()\tcodecs", "contents": "encode(${1:input[}, ${2:errors]})"},
		{"trigger": "encode()\tcodecs", "contents": "encode(${1:obj}, ${2:encoding='utf-8'}, ${3:errors='strict'})"},
		{"trigger": "getdecoder()\tcodecs", "contents": "getdecoder(${1:encoding})"},
		{"trigger": "getencoder()\tcodecs", "contents": "getencoder(${1:encoding})"},
		{"trigger": "getincrementaldecoder()\tcodecs", "contents": "getincrementaldecoder(${1:encoding})"},
		{"trigger": "getincrementalencoder()\tcodecs", "contents": "getincrementalencoder(${1:encoding})"},
		{"trigger": "getreader()\tcodecs", "contents": "getreader(${1:encoding})"},
		{"trigger": "getstate()\tcodecs", "contents": "getstate(${1:})"},
		{"trigger": "getwriter()\tcodecs", "contents": "getwriter(${1:encoding})"},
		{"trigger": "ignore_errors()\tcodecs", "contents": "ignore_errors(${1:exception})"},
		{"trigger": "iterdecode()\tcodecs", "contents": "iterdecode(${1:iterator}, ${2:encoding}, ${3:errors='strict'}, ${4:**kwargs})"},
		{"trigger": "iterencode()\tcodecs", "contents": "iterencode(${1:iterator}, ${2:encoding}, ${3:errors='strict'}, ${4:**kwargs})"},
		{"trigger": "lookup()\tcodecs", "contents": "lookup(${1:encoding})"},
		{"trigger": "lookup_error()\tcodecs", "contents": "lookup_error(${1:name})"},
		{"trigger": "nameprep()\tcodecs", "contents": "nameprep(${1:label})"},
		{"trigger": "namereplace_errors()\tcodecs", "contents": "namereplace_errors(${1:exception})"},
		{"trigger": "open()\tcodecs", "contents": "open(${1:filename}, ${2:mode='r'}, ${3:encoding=None}, ${4:errors='strict'}, ${5:buffering=1})"},
		{"trigger": "register()\tcodecs", "contents": "register(${1:search_function})"},
		{"trigger": "register_error()\tcodecs", "contents": "register_error(${1:name}, ${2:error_handler})"},
		{"trigger": "replace_errors()\tcodecs", "contents": "replace_errors(${1:exception})"},
		{"trigger": "setstate()\tcodecs", "contents": "setstate(${1:state})"},
		{"trigger": "strict_errors()\tcodecs", "contents": "strict_errors(${1:exception})"},
		{"trigger": "xmlcharrefreplace_errors()\tcodecs", "contents": "xmlcharrefreplace_errors(${1:exception})"}
	]
}