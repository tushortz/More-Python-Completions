{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "AbstractSet\ttyping", "contents": "AbstractSet(${1:Sized}, ${2:Iterable[T_co]}, ${3:Container[T_co]})"},
		{"trigger": "AbstractSet\ttyping", "contents": "AbstractSet(${1:set}, ${2:MutableSet[T]})"},
		{"trigger": "Any\ttyping", "contents": "Any"},
		{"trigger": "ByteString\ttyping", "contents": "ByteString(${1:Sequence[int]})"},
		{"trigger": "Callable\ttyping", "contents": "Callable"},
		{"trigger": "Container\ttyping", "contents": "Container(${1:Generic[T_co]})"},
		{"trigger": "Dict\ttyping", "contents": "Dict(${1:dict}, ${2:MutableMapping[KT}, ${3:VT]})"},
		{"trigger": "Generator\ttyping", "contents": "Generator(${1:Iterator[T_co]}, ${2:Generic[T_co}, ${3:T_contra}, ${4:V_co]})"},
		{"trigger": "Generic\ttyping", "contents": "Generic"},
		{"trigger": "ItemsView\ttyping", "contents": "ItemsView(${1:MappingView}, ${2:Generic[KT_co}, ${3:VT_co]})"},
		{"trigger": "Iterable\ttyping", "contents": "Iterable(${1:Generic[T_co]})"},
		{"trigger": "Iterator\ttyping", "contents": "Iterator(${1:Iterable[T_co]})"},
		{"trigger": "KeysView\ttyping", "contents": "KeysView(${1:MappingView[KT_co]}, ${2:AbstractSet[KT_co]})"},
		{"trigger": "List\ttyping", "contents": "List(${1:list}, ${2:MutableSequence[T]})"},
		{"trigger": "Mapping\ttyping", "contents": "Mapping(${1:Sized}, ${2:Iterable[KT]}, ${3:Container[KT]}, ${4:Generic[VT_co]})"},
		{"trigger": "MappingView\ttyping", "contents": "MappingView(${1:Sized}, ${2:Iterable[T_co]})"},
		{"trigger": "MutableMapping\ttyping", "contents": "MutableMapping(${1:Mapping[KT}, ${2:VT]})"},
		{"trigger": "MutableSequence\ttyping", "contents": "MutableSequence(${1:Sequence[T]})"},
		{"trigger": "MutableSet\ttyping", "contents": "MutableSet(${1:AbstractSet[T]})"},
		{"trigger": "NamedTuple\ttyping", "contents": "NamedTuple(${1:typename}, ${2:fields})"},
		{"trigger": "Optional\ttyping", "contents": "Optional"},
		{"trigger": "Reversible\ttyping", "contents": "Reversible"},
		{"trigger": "Sequence\ttyping", "contents": "Sequence(${1:Sized}, ${2:Iterable[T_co]}, ${3:Container[T_co]})"},
		{"trigger": "SupportsAbs\ttyping", "contents": "SupportsAbs"},
		{"trigger": "SupportsFloat\ttyping", "contents": "SupportsFloat"},
		{"trigger": "SupportsInt\ttyping", "contents": "SupportsInt"},
		{"trigger": "SupportsRound\ttyping", "contents": "SupportsRound"},
		{"trigger": "Tuple\ttyping", "contents": "Tuple"},
		{"trigger": "TypeVar\ttyping", "contents": "TypeVar"},
		{"trigger": "Union\ttyping", "contents": "Union"},
		{"trigger": "ValuesView\ttyping", "contents": "ValuesView(${1:MappingView[VT_co]})"},
		{"trigger": "cast()\ttyping", "contents": "cast(${1:typ}, ${2:val})"},
		{"trigger": "get_type_hints()\ttyping", "contents": "get_type_hints(${1:obj})"},
		{"trigger": "io()\ttyping", "contents": "io()"},
		{"trigger": "no_type_check()\ttyping", "contents": "no_type_check(${1:arg})"},
		{"trigger": "no_type_check_decorator()\ttyping", "contents": "no_type_check_decorator(${1:decorator})"},
		{"trigger": "re()\ttyping", "contents": "re()"}
	]
}