{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "AF_CAN\tsocket", "contents": "AF_CAN"},
		{"trigger": "AF_INET6\tsocket", "contents": "AF_INET6"},
		{"trigger": "AF_INET\tsocket", "contents": "AF_INET"},
		{"trigger": "AF_LINK\tsocket", "contents": "AF_LINK"},
		{"trigger": "AF_RDS\tsocket", "contents": "AF_RDS"},
		{"trigger": "AF_UNIX\tsocket", "contents": "AF_UNIX"},
		{"trigger": "BDADDR_ANY\tsocket", "contents": "BDADDR_ANY"},
		{"trigger": "BDADDR_LOCAL\tsocket", "contents": "BDADDR_LOCAL"},
		{"trigger": "CAN_BCM\tsocket", "contents": "CAN_BCM"},
		{"trigger": "CAN_RAW_FD_FRAMES\tsocket", "contents": "CAN_RAW_FD_FRAMES"},
		{"trigger": "CMSG_LEN\tsocket", "contents": "CMSG_LEN(${1:length})"},
		{"trigger": "CMSG_SPACE\tsocket", "contents": "CMSG_SPACE(${1:length})"},
		{"trigger": "HCI_DATA_DIR\tsocket", "contents": "HCI_DATA_DIR"},
		{"trigger": "HCI_FILTER\tsocket", "contents": "HCI_FILTER"},
		{"trigger": "HCI_TIME_STAMP\tsocket", "contents": "HCI_TIME_STAMP"},
		{"trigger": "PF_CAN\tsocket", "contents": "PF_CAN"},
		{"trigger": "PF_RDS\tsocket", "contents": "PF_RDS"},
		{"trigger": "SOCK_CLOEXEC\tsocket", "contents": "SOCK_CLOEXEC"},
		{"trigger": "SOCK_DGRAM\tsocket", "contents": "SOCK_DGRAM"},
		{"trigger": "SOCK_NONBLOCK\tsocket", "contents": "SOCK_NONBLOCK"},
		{"trigger": "SOCK_RAW\tsocket", "contents": "SOCK_RAW"},
		{"trigger": "SOCK_RDM\tsocket", "contents": "SOCK_RDM"},
		{"trigger": "SOCK_SEQPACKET\tsocket", "contents": "SOCK_SEQPACKET"},
		{"trigger": "SOCK_STREAM\tsocket", "contents": "SOCK_STREAM"},
		{"trigger": "SOL_RDS\tsocket", "contents": "SOL_RDS"},
		{"trigger": "SOMAXCONN\tsocket", "contents": "SOMAXCONN"},
		{"trigger": "SocketType\tsocket", "contents": "SocketType"},
		{"trigger": "accept()\tsocket", "contents": "accept(${1:})"},
		{"trigger": "bind()\tsocket", "contents": "bind(${1:address})"},
		{"trigger": "close()\tsocket", "contents": "close(${1:})"},
		{"trigger": "connect()\tsocket", "contents": "connect(${1:address})"},
		{"trigger": "connect_ex()\tsocket", "contents": "connect_ex(${1:address})"},
		{"trigger": "create_connection()\tsocket", "contents": "create_connection(${1:address[}, ${2:timeout[}, ${3:source_address]]})"},
		{"trigger": "detach()\tsocket", "contents": "detach(${1:})"},
		{"trigger": "dup()\tsocket", "contents": "dup(${1:})"},
		{"trigger": "error()\tsocket", "contents": "error()"},
		{"trigger": "family()\tsocket", "contents": "family()"},
		{"trigger": "fileno()\tsocket", "contents": "fileno(${1:})"},
		{"trigger": "fromfd()\tsocket", "contents": "fromfd(${1:fd}, ${2:family}, ${3:type}, ${4:proto=0})"},
		{"trigger": "fromshare()\tsocket", "contents": "fromshare(${1:data})"},
		{"trigger": "gaierror()\tsocket", "contents": "gaierror()"},
		{"trigger": "get_inheritable()\tsocket", "contents": "get_inheritable(${1:})"},
		{"trigger": "getaddrinfo()\tsocket", "contents": "getaddrinfo(${1:host}, ${2:port}, ${3:family=0}, ${4:type=0}, ${5:proto=0}, ${6:flags=0})"},
		{"trigger": "getdefaulttimeout()\tsocket", "contents": "getdefaulttimeout(${1:})"},
		{"trigger": "getfqdn()\tsocket", "contents": "getfqdn(${1:[name]})"},
		{"trigger": "gethostbyaddr()\tsocket", "contents": "gethostbyaddr(${1:ip_address})"},
		{"trigger": "gethostbyname()\tsocket", "contents": "gethostbyname(${1:hostname})"},
		{"trigger": "gethostbyname_ex()\tsocket", "contents": "gethostbyname_ex(${1:hostname})"},
		{"trigger": "gethostname()\tsocket", "contents": "gethostname(${1:})"},
		{"trigger": "getnameinfo()\tsocket", "contents": "getnameinfo(${1:sockaddr}, ${2:flags})"},
		{"trigger": "getpeername()\tsocket", "contents": "getpeername(${1:})"},
		{"trigger": "getprotobyname()\tsocket", "contents": "getprotobyname(${1:protocolname})"},
		{"trigger": "getservbyname()\tsocket", "contents": "getservbyname(${1:servicename[}, ${2:protocolname]})"},
		{"trigger": "getservbyport()\tsocket", "contents": "getservbyport(${1:port[}, ${2:protocolname]})"},
		{"trigger": "getsockname()\tsocket", "contents": "getsockname(${1:})"},
		{"trigger": "getsockopt()\tsocket", "contents": "getsockopt(${1:level}, ${2:optname[}, ${3:buflen]})"},
		{"trigger": "gettimeout()\tsocket", "contents": "gettimeout(${1:})"},
		{"trigger": "has_ipv6()\tsocket", "contents": "has_ipv6()"},
		{"trigger": "herror()\tsocket", "contents": "herror()"},
		{"trigger": "htonl()\tsocket", "contents": "htonl(${1:x})"},
		{"trigger": "htons()\tsocket", "contents": "htons(${1:x})"},
		{"trigger": "if_indextoname()\tsocket", "contents": "if_indextoname(${1:if_index})"},
		{"trigger": "if_nameindex()\tsocket", "contents": "if_nameindex(${1:})"},
		{"trigger": "if_nametoindex()\tsocket", "contents": "if_nametoindex(${1:if_name})"},
		{"trigger": "inet_aton()\tsocket", "contents": "inet_aton(${1:ip_string})"},
		{"trigger": "inet_ntoa()\tsocket", "contents": "inet_ntoa(${1:packed_ip})"},
		{"trigger": "inet_ntop()\tsocket", "contents": "inet_ntop(${1:address_family}, ${2:packed_ip})"},
		{"trigger": "inet_pton()\tsocket", "contents": "inet_pton(${1:address_family}, ${2:ip_string})"},
		{"trigger": "ioctl()\tsocket", "contents": "ioctl(${1:control}, ${2:option})"},
		{"trigger": "listen()\tsocket", "contents": "listen(${1:[backlog]})"},
		{"trigger": "makefile()\tsocket", "contents": "makefile(${1:mode='r'}, ${2:buffering=None}, ${3:*}, ${4:encoding=None}, ${5:errors=None}, ${6:newline=None})"},
		{"trigger": "ntohl()\tsocket", "contents": "ntohl(${1:x})"},
		{"trigger": "ntohs()\tsocket", "contents": "ntohs(${1:x})"},
		{"trigger": "proto()\tsocket", "contents": "proto()"},
		{"trigger": "recv()\tsocket", "contents": "recv(${1:bufsize[}, ${2:flags]})"},
		{"trigger": "recv_into()\tsocket", "contents": "recv_into(${1:buffer[}, ${2:nbytes[}, ${3:flags]]})"},
		{"trigger": "recvfrom()\tsocket", "contents": "recvfrom(${1:bufsize[}, ${2:flags]})"},
		{"trigger": "recvfrom_into()\tsocket", "contents": "recvfrom_into(${1:buffer[}, ${2:nbytes[}, ${3:flags]]})"},
		{"trigger": "recvmsg()\tsocket", "contents": "recvmsg(${1:bufsize[}, ${2:ancbufsize[}, ${3:flags]]})"},
		{"trigger": "recvmsg_into()\tsocket", "contents": "recvmsg_into(${1:buffers[}, ${2:ancbufsize[}, ${3:flags]]})"},
		{"trigger": "send()\tsocket", "contents": "send(${1:bytes[}, ${2:flags]})"},
		{"trigger": "sendall()\tsocket", "contents": "sendall(${1:bytes[}, ${2:flags]})"},
		{"trigger": "sendfile()\tsocket", "contents": "sendfile(${1:file}, ${2:offset=0}, ${3:count=None})"},
		{"trigger": "sendmsg()\tsocket", "contents": "sendmsg(${1:buffers[}, ${2:ancdata[}, ${3:flags[}, ${4:address]]]})"},
		{"trigger": "sendto()\tsocket", "contents": "sendto(${1:bytes}, ${2:address})"},
		{"trigger": "sendto()\tsocket", "contents": "sendto(${1:bytes}, ${2:flags}, ${3:address})"},
		{"trigger": "set_inheritable()\tsocket", "contents": "set_inheritable(${1:inheritable})"},
		{"trigger": "setblocking()\tsocket", "contents": "setblocking(${1:flag})"},
		{"trigger": "setdefaulttimeout()\tsocket", "contents": "setdefaulttimeout(${1:timeout})"},
		{"trigger": "sethostname()\tsocket", "contents": "sethostname(${1:name})"},
		{"trigger": "setsockopt()\tsocket", "contents": "setsockopt(${1:level}, ${2:optname}, ${3:value})"},
		{"trigger": "settimeout()\tsocket", "contents": "settimeout(${1:value})"},
		{"trigger": "share()\tsocket", "contents": "share(${1:process_id})"},
		{"trigger": "shutdown()\tsocket", "contents": "shutdown(${1:how})"},
		{"trigger": "socket()\tsocket", "contents": "socket(${1:family=AF_INET}, ${2:type=SOCK_STREAM}, ${3:proto=0}, ${4:fileno=None})"},
		{"trigger": "socketpair()\tsocket", "contents": "socketpair(${1:[family[}, ${2:type[}, ${3:proto]]]})"},
		{"trigger": "timeout()\tsocket", "contents": "timeout()"},
		{"trigger": "type()\tsocket", "contents": "type()"}
	]
}