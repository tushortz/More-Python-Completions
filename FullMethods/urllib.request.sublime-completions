{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-AbstractBasicAuthHandler\turllib*", "contents": "urllib.request.AbstractBasicAuthHandler(${1:password_mgr=None})"},
		{"trigger": "y-AbstractDigestAuthHandler\turllib*", "contents": "urllib.request.AbstractDigestAuthHandler(${1:password_mgr=None})"},
		{"trigger": "y-BaseHandler\turllib*", "contents": "urllib.request.BaseHandler"},
		{"trigger": "y-CacheFTPHandler\turllib*", "contents": "urllib.request.CacheFTPHandler"},
		{"trigger": "y-DataHandler\turllib*", "contents": "urllib.request.DataHandler"},
		{"trigger": "y-FTPHandler\turllib*", "contents": "urllib.request.FTPHandler"},
		{"trigger": "y-FancyURLopener\turllib*", "contents": "urllib.request.FancyURLopener(${1:...})"},
		{"trigger": "y-FileHandler\turllib*", "contents": "urllib.request.FileHandler"},
		{"trigger": "y-HTTPBasicAuthHandler\turllib*", "contents": "urllib.request.HTTPBasicAuthHandler(${1:password_mgr=None})"},
		{"trigger": "y-HTTPCookieProcessor\turllib*", "contents": "urllib.request.HTTPCookieProcessor(${1:cookiejar=None})"},
		{"trigger": "y-HTTPDefaultErrorHandler\turllib*", "contents": "urllib.request.HTTPDefaultErrorHandler"},
		{"trigger": "y-HTTPDigestAuthHandler\turllib*", "contents": "urllib.request.HTTPDigestAuthHandler(${1:password_mgr=None})"},
		{"trigger": "y-HTTPErrorProcessor\turllib*", "contents": "urllib.request.HTTPErrorProcessor"},
		{"trigger": "y-HTTPHandler\turllib*", "contents": "urllib.request.HTTPHandler"},
		{"trigger": "y-HTTPPasswordMgr\turllib*", "contents": "urllib.request.HTTPPasswordMgr"},
		{"trigger": "y-HTTPPasswordMgrWithDefaultRealm\turllib*", "contents": "urllib.request.HTTPPasswordMgrWithDefaultRealm"},
		{"trigger": "y-HTTPPasswordMgrWithPriorAuth\turllib*", "contents": "urllib.request.HTTPPasswordMgrWithPriorAuth"},
		{"trigger": "y-HTTPRedirectHandler\turllib*", "contents": "urllib.request.HTTPRedirectHandler"},
		{"trigger": "y-HTTPSHandler\turllib*", "contents": "urllib.request.HTTPSHandler(${1:debuglevel=0}, ${2:context=None}, ${3:check_hostname=None})"},
		{"trigger": "y-OpenerDirector\turllib*", "contents": "urllib.request.OpenerDirector"},
		{"trigger": "y-ProxyBasicAuthHandler\turllib*", "contents": "urllib.request.ProxyBasicAuthHandler(${1:password_mgr=None})"},
		{"trigger": "y-ProxyDigestAuthHandler\turllib*", "contents": "urllib.request.ProxyDigestAuthHandler(${1:password_mgr=None})"},
		{"trigger": "y-ProxyHandler\turllib*", "contents": "urllib.request.ProxyHandler(${1:proxies=None})"},
		{"trigger": "y-Request\turllib*", "contents": "urllib.request.Request(${1:url}, ${2:data=None}, ${3:headers={}}, ${4:origin_req_host=None}, ${5:unverifiable=False}, ${6:method=None})"},
		{"trigger": "y-URLopener\turllib*", "contents": "urllib.request.URLopener(${1:proxies=None}, ${2:**x509})"},
		{"trigger": "y-UnknownHandler\turllib*", "contents": "urllib.request.UnknownHandler"},
		{"trigger": "y-add_handler()\turllib*", "contents": "urllib.request.add_handler(${1:handler})"},
		{"trigger": "y-add_header()\turllib*", "contents": "urllib.request.add_header(${1:key}, ${2:val})"},
		{"trigger": "y-add_parent()\turllib*", "contents": "urllib.request.add_parent(${1:director})"},
		{"trigger": "y-add_password()\turllib*", "contents": "urllib.request.add_password(${1:realm}, ${2:uri}, ${3:user}, ${4:passwd}, ${5:is_authenticated=False})"},
		{"trigger": "y-add_password()\turllib*", "contents": "urllib.request.add_password(${1:realm}, ${2:uri}, ${3:user}, ${4:passwd})"},
		{"trigger": "y-add_unredirected_header()\turllib*", "contents": "urllib.request.add_unredirected_header(${1:key}, ${2:header})"},
		{"trigger": "y-build_opener()\turllib*", "contents": "urllib.request.build_opener(${1:[handler}, ${2:...]})"},
		{"trigger": "y-close()\turllib*", "contents": "urllib.request.close(${1:})"},
		{"trigger": "y-cookiejar()\turllib*", "contents": "urllib.request.cookiejar()"},
		{"trigger": "y-data()\turllib*", "contents": "urllib.request.data()"},
		{"trigger": "y-data_open()\turllib*", "contents": "urllib.request.data_open(${1:req})"},
		{"trigger": "y-default_open()\turllib*", "contents": "urllib.request.default_open(${1:req})"},
		{"trigger": "y-error()\turllib*", "contents": "urllib.request.error(${1:proto}, ${2:*args})"},
		{"trigger": "y-file_open()\turllib*", "contents": "urllib.request.file_open(${1:req})"},
		{"trigger": "y-find_user_password()\turllib*", "contents": "urllib.request.find_user_password(${1:realm}, ${2:authuri})"},
		{"trigger": "y-find_user_password()\turllib*", "contents": "urllib.request.find_user_password(${1:realm}, ${2:authuri})"},
		{"trigger": "y-ftp_open()\turllib*", "contents": "urllib.request.ftp_open(${1:req})"},
		{"trigger": "y-full_url()\turllib*", "contents": "urllib.request.full_url()"},
		{"trigger": "y-get_full_url()\turllib*", "contents": "urllib.request.get_full_url(${1:})"},
		{"trigger": "y-get_header()\turllib*", "contents": "urllib.request.get_header(${1:header_name}, ${2:default=None})"},
		{"trigger": "y-get_method()\turllib*", "contents": "urllib.request.get_method(${1:})"},
		{"trigger": "y-getproxies()\turllib*", "contents": "urllib.request.getproxies(${1:})"},
		{"trigger": "y-has_header()\turllib*", "contents": "urllib.request.has_header(${1:header})"},
		{"trigger": "y-header_items()\turllib*", "contents": "urllib.request.header_items(${1:})"},
		{"trigger": "y-host()\turllib*", "contents": "urllib.request.host()"},
		{"trigger": "y-http_error_301()\turllib*", "contents": "urllib.request.http_error_301(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_error_302()\turllib*", "contents": "urllib.request.http_error_302(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_error_303()\turllib*", "contents": "urllib.request.http_error_303(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_error_307()\turllib*", "contents": "urllib.request.http_error_307(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_error_401()\turllib*", "contents": "urllib.request.http_error_401(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_error_407()\turllib*", "contents": "urllib.request.http_error_407(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_error_auth_reqed()\turllib*", "contents": "urllib.request.http_error_auth_reqed(${1:authreq}, ${2:host}, ${3:req}, ${4:headers})"},
		{"trigger": "y-http_error_default()\turllib*", "contents": "urllib.request.http_error_default(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_error_nnn()\turllib*", "contents": "urllib.request.http_error_nnn(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs})"},
		{"trigger": "y-http_open()\turllib*", "contents": "urllib.request.http_open(${1:req})"},
		{"trigger": "y-http_response()\turllib*", "contents": "urllib.request.http_response(${1:})"},
		{"trigger": "y-https_open()\turllib*", "contents": "urllib.request.https_open(${1:req})"},
		{"trigger": "y-https_response()\turllib*", "contents": "urllib.request.https_response(${1:})"},
		{"trigger": "y-install_opener()\turllib*", "contents": "urllib.request.install_opener(${1:opener})"},
		{"trigger": "y-is_authenticated()\turllib*", "contents": "urllib.request.is_authenticated(${1:self}, ${2:authuri})"},
		{"trigger": "y-method()\turllib*", "contents": "urllib.request.method()"},
		{"trigger": "y-open()\turllib*", "contents": "urllib.request.open(${1:url}, ${2:data=None[}, ${3:timeout]})"},
		{"trigger": "y-origin_req_host()\turllib*", "contents": "urllib.request.origin_req_host()"},
		{"trigger": "y-parent()\turllib*", "contents": "urllib.request.parent()"},
		{"trigger": "y-pathname2url()\turllib*", "contents": "urllib.request.pathname2url(${1:path})"},
		{"trigger": "y-protocol_open()\turllib*", "contents": "urllib.request.protocol_open(${1:req})"},
		{"trigger": "y-protocol_open()\turllib*", "contents": "urllib.request.protocol_open(${1:request})"},
		{"trigger": "y-protocol_request()\turllib*", "contents": "urllib.request.protocol_request(${1:req})"},
		{"trigger": "y-protocol_response()\turllib*", "contents": "urllib.request.protocol_response(${1:req}, ${2:response})"},
		{"trigger": "y-redirect_request()\turllib*", "contents": "urllib.request.redirect_request(${1:req}, ${2:fp}, ${3:code}, ${4:msg}, ${5:hdrs}, ${6:newurl})"},
		{"trigger": "y-remove_header()\turllib*", "contents": "urllib.request.remove_header(${1:header})"},
		{"trigger": "y-selector()\turllib*", "contents": "urllib.request.selector()"},
		{"trigger": "y-setMaxConns()\turllib*", "contents": "urllib.request.setMaxConns(${1:m})"},
		{"trigger": "y-setTimeout()\turllib*", "contents": "urllib.request.setTimeout(${1:t})"},
		{"trigger": "y-set_proxy()\turllib*", "contents": "urllib.request.set_proxy(${1:host}, ${2:type})"},
		{"trigger": "y-type()\turllib*", "contents": "urllib.request.type()"},
		{"trigger": "y-unknown_open()\turllib*", "contents": "urllib.request.unknown_open(${1:req})"},
		{"trigger": "y-unknown_open()\turllib*", "contents": "urllib.request.unknown_open(${1:})"},
		{"trigger": "y-unverifiable()\turllib*", "contents": "urllib.request.unverifiable()"},
		{"trigger": "y-update_authenticated()\turllib*", "contents": "urllib.request.update_authenticated(${1:self}, ${2:uri}, ${3:is_authenticated=False})"},
		{"trigger": "y-url2pathname()\turllib*", "contents": "urllib.request.url2pathname(${1:path})"},
		{"trigger": "y-urlcleanup()\turllib*", "contents": "urllib.request.urlcleanup(${1:})"},
		{"trigger": "y-urlopen()\turllib*", "contents": "urllib.request.urlopen(${1:url}, ${2:data=None}, ${3:[timeout}, ${4:]*}, ${5:cafile=None}, ${6:capath=None}, ${7:cadefault=False}, ${8:context=None})"},
		{"trigger": "y-urlretrieve()\turllib*", "contents": "urllib.request.urlretrieve(${1:url}, ${2:filename=None}, ${3:reporthook=None}, ${4:data=None})"}
	]
}