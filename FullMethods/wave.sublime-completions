{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-Error\twave*", "contents": "wave.Error"},
		{"trigger": "y-close()\twave*", "contents": "wave.close(${1:})"},
		{"trigger": "y-getcompname()\twave*", "contents": "wave.getcompname(${1:})"},
		{"trigger": "y-getcomptype()\twave*", "contents": "wave.getcomptype(${1:})"},
		{"trigger": "y-getframerate()\twave*", "contents": "wave.getframerate(${1:})"},
		{"trigger": "y-getmark()\twave*", "contents": "wave.getmark(${1:id})"},
		{"trigger": "y-getmarkers()\twave*", "contents": "wave.getmarkers(${1:})"},
		{"trigger": "y-getnchannels()\twave*", "contents": "wave.getnchannels(${1:})"},
		{"trigger": "y-getnframes()\twave*", "contents": "wave.getnframes(${1:})"},
		{"trigger": "y-getparams()\twave*", "contents": "wave.getparams(${1:})"},
		{"trigger": "y-getsampwidth()\twave*", "contents": "wave.getsampwidth(${1:})"},
		{"trigger": "y-open()\twave*", "contents": "wave.open(${1:file}, ${2:mode=None})"},
		{"trigger": "y-openfp()\twave*", "contents": "wave.openfp(${1:file}, ${2:mode})"},
		{"trigger": "y-readframes()\twave*", "contents": "wave.readframes(${1:n})"},
		{"trigger": "y-rewind()\twave*", "contents": "wave.rewind(${1:})"},
		{"trigger": "y-setcomptype()\twave*", "contents": "wave.setcomptype(${1:type}, ${2:name})"},
		{"trigger": "y-setframerate()\twave*", "contents": "wave.setframerate(${1:n})"},
		{"trigger": "y-setnchannels()\twave*", "contents": "wave.setnchannels(${1:n})"},
		{"trigger": "y-setnframes()\twave*", "contents": "wave.setnframes(${1:n})"},
		{"trigger": "y-setparams()\twave*", "contents": "wave.setparams(${1:tuple})"},
		{"trigger": "y-setpos()\twave*", "contents": "wave.setpos(${1:pos})"},
		{"trigger": "y-setsampwidth()\twave*", "contents": "wave.setsampwidth(${1:n})"},
		{"trigger": "y-tell()\twave*", "contents": "wave.tell(${1:})"},
		{"trigger": "y-writeframes()\twave*", "contents": "wave.writeframes(${1:data})"},
		{"trigger": "y-writeframesraw()\twave*", "contents": "wave.writeframesraw(${1:data})"}
	]
}