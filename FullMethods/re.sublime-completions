{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-A\tre*", "contents": "re.A"},
		{"trigger": "y-ASCII\tre*", "contents": "re.ASCII"},
		{"trigger": "y-DEBUG\tre*", "contents": "re.DEBUG"},
		{"trigger": "y-DOTALL\tre*", "contents": "re.DOTALL"},
		{"trigger": "y-I\tre*", "contents": "re.I"},
		{"trigger": "y-IGNORECASE\tre*", "contents": "re.IGNORECASE"},
		{"trigger": "y-L\tre*", "contents": "re.L"},
		{"trigger": "y-LOCALE\tre*", "contents": "re.LOCALE"},
		{"trigger": "y-M\tre*", "contents": "re.M"},
		{"trigger": "y-MULTILINE\tre*", "contents": "re.MULTILINE"},
		{"trigger": "y-S\tre*", "contents": "re.S"},
		{"trigger": "y-VERBOSE\tre*", "contents": "re.VERBOSE"},
		{"trigger": "y-X\tre*", "contents": "re.X"},
		{"trigger": "y-compile()\tre*", "contents": "re.compile(${1:pattern}, ${2:flags=0})"},
		{"trigger": "y-end()\tre*", "contents": "re.end(${1:[group]})"},
		{"trigger": "y-endpos()\tre*", "contents": "re.endpos()"},
		{"trigger": "y-error()\tre*", "contents": "re.error(${1:msg}, ${2:pattern=None}, ${3:pos=None})"},
		{"trigger": "y-escape()\tre*", "contents": "re.escape(${1:string})"},
		{"trigger": "y-expand()\tre*", "contents": "re.expand(${1:template})"},
		{"trigger": "y-findall()\tre*", "contents": "re.findall(${1:pattern}, ${2:string}, ${3:flags=0})"},
		{"trigger": "y-findall()\tre*", "contents": "re.findall(${1:string[}, ${2:pos[}, ${3:endpos]]})"},
		{"trigger": "y-finditer()\tre*", "contents": "re.finditer(${1:pattern}, ${2:string}, ${3:flags=0})"},
		{"trigger": "y-finditer()\tre*", "contents": "re.finditer(${1:string[}, ${2:pos[}, ${3:endpos]]})"},
		{"trigger": "y-flags()\tre*", "contents": "re.flags()"},
		{"trigger": "y-fullmatch()\tre*", "contents": "re.fullmatch(${1:pattern}, ${2:string}, ${3:flags=0})"},
		{"trigger": "y-fullmatch()\tre*", "contents": "re.fullmatch(${1:string[}, ${2:pos[}, ${3:endpos]]})"},
		{"trigger": "y-group()\tre*", "contents": "re.group(${1:[group1}, ${2:...]})"},
		{"trigger": "y-groupdict()\tre*", "contents": "re.groupdict(${1:default=None})"},
		{"trigger": "y-groupindex()\tre*", "contents": "re.groupindex()"},
		{"trigger": "y-groups()\tre*", "contents": "re.groups()"},
		{"trigger": "y-groups()\tre*", "contents": "re.groups(${1:default=None})"},
		{"trigger": "y-lastgroup()\tre*", "contents": "re.lastgroup()"},
		{"trigger": "y-lastindex()\tre*", "contents": "re.lastindex()"},
		{"trigger": "y-match()\tre*", "contents": "re.match(${1:pattern}, ${2:string}, ${3:flags=0})"},
		{"trigger": "y-match()\tre*", "contents": "re.match(${1:string[}, ${2:pos[}, ${3:endpos]]})"},
		{"trigger": "y-pattern()\tre*", "contents": "re.pattern()"},
		{"trigger": "y-pos()\tre*", "contents": "re.pos()"},
		{"trigger": "y-purge()\tre*", "contents": "re.purge(${1:})"},
		{"trigger": "y-re()\tre*", "contents": "re.re()"},
		{"trigger": "y-search()\tre*", "contents": "re.search(${1:pattern}, ${2:string}, ${3:flags=0})"},
		{"trigger": "y-search()\tre*", "contents": "re.search(${1:string[}, ${2:pos[}, ${3:endpos]]})"},
		{"trigger": "y-span()\tre*", "contents": "re.span(${1:[group]})"},
		{"trigger": "y-split()\tre*", "contents": "re.split(${1:pattern}, ${2:string}, ${3:maxsplit=0}, ${4:flags=0})"},
		{"trigger": "y-split()\tre*", "contents": "re.split(${1:string}, ${2:maxsplit=0})"},
		{"trigger": "y-start()\tre*", "contents": "re.start(${1:[group]})"},
		{"trigger": "y-string()\tre*", "contents": "re.string()"},
		{"trigger": "y-sub()\tre*", "contents": "re.sub(${1:pattern}, ${2:repl}, ${3:string}, ${4:count=0}, ${5:flags=0})"},
		{"trigger": "y-sub()\tre*", "contents": "re.sub(${1:repl}, ${2:string}, ${3:count=0})"},
		{"trigger": "y-subn()\tre*", "contents": "re.subn(${1:pattern}, ${2:repl}, ${3:string}, ${4:count=0}, ${5:flags=0})"},
		{"trigger": "y-subn()\tre*", "contents": "re.subn(${1:repl}, ${2:string}, ${3:count=0})"}
	]
}