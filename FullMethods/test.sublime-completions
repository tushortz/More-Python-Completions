{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-EnvironmentVarGuard\ttest*", "contents": "test.EnvironmentVarGuard"},
		{"trigger": "y-ResourceDenied\ttest*", "contents": "test.ResourceDenied"},
		{"trigger": "y-SuppressCrashReport\ttest*", "contents": "test.SuppressCrashReport"},
		{"trigger": "y-TESTFN\ttest*", "contents": "test.TESTFN"},
		{"trigger": "y-TestFailed\ttest*", "contents": "test.TestFailed"},
		{"trigger": "y-TransientResource\ttest*", "contents": "test.TransientResource(${1:exc}, ${2:**kwargs})"},
		{"trigger": "y-WarningsRecorder\ttest*", "contents": "test.WarningsRecorder"},
		{"trigger": "y-anticipate_failure()\ttest*", "contents": "test.anticipate_failure(${1:condition})"},
		{"trigger": "y-bind_port()\ttest*", "contents": "test.bind_port(${1:sock}, ${2:host=HOST})"},
		{"trigger": "y-can_symlink()\ttest*", "contents": "test.can_symlink(${1:})"},
		{"trigger": "y-captured_stderr()\ttest*", "contents": "test.captured_stderr(${1:})"},
		{"trigger": "y-captured_stdin()\ttest*", "contents": "test.captured_stdin(${1:})"},
		{"trigger": "y-captured_stdout()\ttest*", "contents": "test.captured_stdout(${1:})"},
		{"trigger": "y-change_cwd()\ttest*", "contents": "test.change_cwd(${1:path}, ${2:quiet=False})"},
		{"trigger": "y-check_warnings()\ttest*", "contents": "test.check_warnings(${1:*filters}, ${2:quiet=True})"},
		{"trigger": "y-find_unused_port()\ttest*", "contents": "test.find_unused_port(${1:family=socket.AF_INET}, ${2:socktype=socket.SOCK_STREAM})"},
		{"trigger": "y-findfile()\ttest*", "contents": "test.findfile(${1:filename}, ${2:subdir=None})"},
		{"trigger": "y-forget()\ttest*", "contents": "test.forget(${1:module_name})"},
		{"trigger": "y-import_fresh_module()\ttest*", "contents": "test.import_fresh_module(${1:name}, ${2:fresh=}, ${3:})"},
		{"trigger": "y-import_module()\ttest*", "contents": "test.import_module(${1:name}, ${2:deprecated=False})"},
		{"trigger": "y-is_jython()\ttest*", "contents": "test.is_jython()"},
		{"trigger": "y-is_resource_enabled()\ttest*", "contents": "test.is_resource_enabled(${1:resource})"},
		{"trigger": "y-load_package_tests()\ttest*", "contents": "test.load_package_tests(${1:pkg_dir}, ${2:loader}, ${3:standard_tests}, ${4:pattern})"},
		{"trigger": "y-make_bad_fd()\ttest*", "contents": "test.make_bad_fd(${1:})"},
		{"trigger": "y-requires()\ttest*", "contents": "test.requires(${1:resource}, ${2:msg=None})"},
		{"trigger": "y-run_doctest()\ttest*", "contents": "test.run_doctest(${1:module}, ${2:verbosity=None})"},
		{"trigger": "y-run_unittest()\ttest*", "contents": "test.run_unittest(${1:*classes})"},
		{"trigger": "y-run_with_locale()\ttest*", "contents": "test.run_with_locale(${1:catstr}, ${2:*locales})"},
		{"trigger": "y-set()\ttest*", "contents": "test.set(${1:envvar}, ${2:value})"},
		{"trigger": "y-skip_unless_symlink()\ttest*", "contents": "test.skip_unless_symlink()"},
		{"trigger": "y-temp_cwd()\ttest*", "contents": "test.temp_cwd(${1:name='tempcwd'}, ${2:quiet=False})"},
		{"trigger": "y-temp_dir()\ttest*", "contents": "test.temp_dir(${1:path=None}, ${2:quiet=False})"},
		{"trigger": "y-temp_umask()\ttest*", "contents": "test.temp_umask(${1:umask})"},
		{"trigger": "y-unset()\ttest*", "contents": "test.unset(${1:envvar})"},
		{"trigger": "y-verbose()\ttest*", "contents": "test.verbose()"}
	]
}