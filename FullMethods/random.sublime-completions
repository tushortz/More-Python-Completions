{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-SystemRandom\trandom*", "contents": "random.SystemRandom(${1:[seed]})"},
		{"trigger": "y-betavariate()\trandom*", "contents": "random.betavariate(${1:alpha}, ${2:beta})"},
		{"trigger": "y-choice()\trandom*", "contents": "random.choice(${1:seq})"},
		{"trigger": "y-expovariate()\trandom*", "contents": "random.expovariate(${1:lambd})"},
		{"trigger": "y-gammavariate()\trandom*", "contents": "random.gammavariate(${1:alpha}, ${2:beta})"},
		{"trigger": "y-gauss()\trandom*", "contents": "random.gauss(${1:mu}, ${2:sigma})"},
		{"trigger": "y-getrandbits()\trandom*", "contents": "random.getrandbits(${1:k})"},
		{"trigger": "y-getstate()\trandom*", "contents": "random.getstate(${1:})"},
		{"trigger": "y-lognormvariate()\trandom*", "contents": "random.lognormvariate(${1:mu}, ${2:sigma})"},
		{"trigger": "y-normalvariate()\trandom*", "contents": "random.normalvariate(${1:mu}, ${2:sigma})"},
		{"trigger": "y-paretovariate()\trandom*", "contents": "random.paretovariate(${1:alpha})"},
		{"trigger": "y-randint()\trandom*", "contents": "random.randint(${1:a}, ${2:b})"},
		{"trigger": "y-random()\trandom*", "contents": "random.random(${1:})"},
		{"trigger": "y-randrange()\trandom*", "contents": "random.randrange(${1:start}, ${2:stop[}, ${3:step]})"},
		{"trigger": "y-randrange()\trandom*", "contents": "random.randrange(${1:stop})"},
		{"trigger": "y-sample()\trandom*", "contents": "random.sample(${1:population}, ${2:k})"},
		{"trigger": "y-seed()\trandom*", "contents": "random.seed(${1:a=None}, ${2:version=2})"},
		{"trigger": "y-setstate()\trandom*", "contents": "random.setstate(${1:state})"},
		{"trigger": "y-shuffle()\trandom*", "contents": "random.shuffle(${1:x[}, ${2:random]})"},
		{"trigger": "y-triangular()\trandom*", "contents": "random.triangular(${1:low}, ${2:high}, ${3:mode})"},
		{"trigger": "y-uniform()\trandom*", "contents": "random.uniform(${1:a}, ${2:b})"},
		{"trigger": "y-vonmisesvariate()\trandom*", "contents": "random.vonmisesvariate(${1:mu}, ${2:kappa})"},
		{"trigger": "y-weibullvariate()\trandom*", "contents": "random.weibullvariate(${1:alpha}, ${2:beta})"}
	]
}