{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-AbstractSet\ttyping*", "contents": "typing.AbstractSet(${1:Sized}, ${2:Iterable[T_co]}, ${3:Container[T_co]})"},
		{"trigger": "y-AbstractSet\ttyping*", "contents": "typing.AbstractSet(${1:set}, ${2:MutableSet[T]})"},
		{"trigger": "y-Any\ttyping*", "contents": "typing.Any"},
		{"trigger": "y-ByteString\ttyping*", "contents": "typing.ByteString(${1:Sequence[int]})"},
		{"trigger": "y-Callable\ttyping*", "contents": "typing.Callable"},
		{"trigger": "y-Container\ttyping*", "contents": "typing.Container(${1:Generic[T_co]})"},
		{"trigger": "y-Dict\ttyping*", "contents": "typing.Dict(${1:dict}, ${2:MutableMapping[KT}, ${3:VT]})"},
		{"trigger": "y-Generator\ttyping*", "contents": "typing.Generator(${1:Iterator[T_co]}, ${2:Generic[T_co}, ${3:T_contra}, ${4:V_co]})"},
		{"trigger": "y-Generic\ttyping*", "contents": "typing.Generic"},
		{"trigger": "y-ItemsView\ttyping*", "contents": "typing.ItemsView(${1:MappingView}, ${2:Generic[KT_co}, ${3:VT_co]})"},
		{"trigger": "y-Iterable\ttyping*", "contents": "typing.Iterable(${1:Generic[T_co]})"},
		{"trigger": "y-Iterator\ttyping*", "contents": "typing.Iterator(${1:Iterable[T_co]})"},
		{"trigger": "y-KeysView\ttyping*", "contents": "typing.KeysView(${1:MappingView[KT_co]}, ${2:AbstractSet[KT_co]})"},
		{"trigger": "y-List\ttyping*", "contents": "typing.List(${1:list}, ${2:MutableSequence[T]})"},
		{"trigger": "y-Mapping\ttyping*", "contents": "typing.Mapping(${1:Sized}, ${2:Iterable[KT]}, ${3:Container[KT]}, ${4:Generic[VT_co]})"},
		{"trigger": "y-MappingView\ttyping*", "contents": "typing.MappingView(${1:Sized}, ${2:Iterable[T_co]})"},
		{"trigger": "y-MutableMapping\ttyping*", "contents": "typing.MutableMapping(${1:Mapping[KT}, ${2:VT]})"},
		{"trigger": "y-MutableSequence\ttyping*", "contents": "typing.MutableSequence(${1:Sequence[T]})"},
		{"trigger": "y-MutableSet\ttyping*", "contents": "typing.MutableSet(${1:AbstractSet[T]})"},
		{"trigger": "y-NamedTuple\ttyping*", "contents": "typing.NamedTuple(${1:typename}, ${2:fields})"},
		{"trigger": "y-Optional\ttyping*", "contents": "typing.Optional"},
		{"trigger": "y-Reversible\ttyping*", "contents": "typing.Reversible"},
		{"trigger": "y-Sequence\ttyping*", "contents": "typing.Sequence(${1:Sized}, ${2:Iterable[T_co]}, ${3:Container[T_co]})"},
		{"trigger": "y-SupportsAbs\ttyping*", "contents": "typing.SupportsAbs"},
		{"trigger": "y-SupportsFloat\ttyping*", "contents": "typing.SupportsFloat"},
		{"trigger": "y-SupportsInt\ttyping*", "contents": "typing.SupportsInt"},
		{"trigger": "y-SupportsRound\ttyping*", "contents": "typing.SupportsRound"},
		{"trigger": "y-Tuple\ttyping*", "contents": "typing.Tuple"},
		{"trigger": "y-TypeVar\ttyping*", "contents": "typing.TypeVar"},
		{"trigger": "y-Union\ttyping*", "contents": "typing.Union"},
		{"trigger": "y-ValuesView\ttyping*", "contents": "typing.ValuesView(${1:MappingView[VT_co]})"},
		{"trigger": "y-cast()\ttyping*", "contents": "typing.cast(${1:typ}, ${2:val})"},
		{"trigger": "y-get_type_hints()\ttyping*", "contents": "typing.get_type_hints(${1:obj})"},
		{"trigger": "y-io()\ttyping*", "contents": "typing.io()"},
		{"trigger": "y-no_type_check()\ttyping*", "contents": "typing.no_type_check(${1:arg})"},
		{"trigger": "y-no_type_check_decorator()\ttyping*", "contents": "typing.no_type_check_decorator(${1:decorator})"},
		{"trigger": "y-re()\ttyping*", "contents": "typing.re()"}
	]
}