{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-BadStatusLine\thttp*", "contents": "http.client.BadStatusLine"},
		{"trigger": "y-CannotSendHeader\thttp*", "contents": "http.client.CannotSendHeader"},
		{"trigger": "y-CannotSendRequest\thttp*", "contents": "http.client.CannotSendRequest"},
		{"trigger": "y-HTTPConnection\thttp*", "contents": "http.client.HTTPConnection(${1:host}, ${2:port=None}, ${3:[timeout}, ${4:]source_address=None})"},
		{"trigger": "y-HTTPException\thttp*", "contents": "http.client.HTTPException"},
		{"trigger": "y-HTTPResponse\thttp*", "contents": "http.client.HTTPResponse(${1:sock}, ${2:debuglevel=0}, ${3:method=None}, ${4:url=None})"},
		{"trigger": "y-HTTPSConnection\thttp*", "contents": "http.client.HTTPSConnection(${1:host}, ${2:port=None}, ${3:key_file=None}, ${4:cert_file=None}, ${5:[timeout}, ${6:]source_address=None}, ${7:*}, ${8:context=None}, ${9:check_hostname=None})"},
		{"trigger": "y-HTTPS_PORT\thttp*", "contents": "http.client.HTTPS_PORT"},
		{"trigger": "y-HTTP_PORT\thttp*", "contents": "http.client.HTTP_PORT"},
		{"trigger": "y-ImproperConnectionState\thttp*", "contents": "http.client.ImproperConnectionState"},
		{"trigger": "y-IncompleteRead\thttp*", "contents": "http.client.IncompleteRead"},
		{"trigger": "y-InvalidURL\thttp*", "contents": "http.client.InvalidURL"},
		{"trigger": "y-LineTooLong\thttp*", "contents": "http.client.LineTooLong"},
		{"trigger": "y-NotConnected\thttp*", "contents": "http.client.NotConnected"},
		{"trigger": "y-RemoteDisconnected\thttp*", "contents": "http.client.RemoteDisconnected"},
		{"trigger": "y-ResponseNotReady\thttp*", "contents": "http.client.ResponseNotReady"},
		{"trigger": "y-UnimplementedFileMode\thttp*", "contents": "http.client.UnimplementedFileMode"},
		{"trigger": "y-UnknownProtocol\thttp*", "contents": "http.client.UnknownProtocol"},
		{"trigger": "y-UnknownTransferEncoding\thttp*", "contents": "http.client.UnknownTransferEncoding"},
		{"trigger": "y-close()\thttp*", "contents": "http.client.close(${1:})"},
		{"trigger": "y-closed()\thttp*", "contents": "http.client.closed()"},
		{"trigger": "y-connect()\thttp*", "contents": "http.client.connect(${1:})"},
		{"trigger": "y-debuglevel()\thttp*", "contents": "http.client.debuglevel()"},
		{"trigger": "y-endheaders()\thttp*", "contents": "http.client.endheaders(${1:message_body=None})"},
		{"trigger": "y-fileno()\thttp*", "contents": "http.client.fileno(${1:})"},
		{"trigger": "y-getheader()\thttp*", "contents": "http.client.getheader(${1:name}, ${2:default=None})"},
		{"trigger": "y-getheaders()\thttp*", "contents": "http.client.getheaders(${1:})"},
		{"trigger": "y-getresponse()\thttp*", "contents": "http.client.getresponse(${1:})"},
		{"trigger": "y-msg()\thttp*", "contents": "http.client.msg()"},
		{"trigger": "y-putheader()\thttp*", "contents": "http.client.putheader(${1:header}, ${2:argument[}, ${3:...]})"},
		{"trigger": "y-putrequest()\thttp*", "contents": "http.client.putrequest(${1:request}, ${2:selector}, ${3:skip_host=False}, ${4:skip_accept_encoding=False})"},
		{"trigger": "y-read()\thttp*", "contents": "http.client.read(${1:[amt]})"},
		{"trigger": "y-readinto()\thttp*", "contents": "http.client.readinto(${1:b})"},
		{"trigger": "y-reason()\thttp*", "contents": "http.client.reason()"},
		{"trigger": "y-request()\thttp*", "contents": "http.client.request(${1:method}, ${2:url}, ${3:body=None}, ${4:headers={}})"},
		{"trigger": "y-responses()\thttp*", "contents": "http.client.responses()"},
		{"trigger": "y-send()\thttp*", "contents": "http.client.send(${1:data})"},
		{"trigger": "y-set_debuglevel()\thttp*", "contents": "http.client.set_debuglevel(${1:level})"},
		{"trigger": "y-set_tunnel()\thttp*", "contents": "http.client.set_tunnel(${1:host}, ${2:port=None}, ${3:headers=None})"},
		{"trigger": "y-status()\thttp*", "contents": "http.client.status()"},
		{"trigger": "y-version()\thttp*", "contents": "http.client.version()"}
	]
}