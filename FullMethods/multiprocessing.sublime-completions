{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-Array\tmultiprocessing*", "contents": "multiprocessing.Array(${1:typecode_or_type}, ${2:size_or_initializer}, ${3:*}, ${4:lock=True})"},
		{"trigger": "y-AsyncResult\tmultiprocessing*", "contents": "multiprocessing.AsyncResult"},
		{"trigger": "y-AuthenticationError\tmultiprocessing*", "contents": "multiprocessing.AuthenticationError"},
		{"trigger": "y-Barrier\tmultiprocessing*", "contents": "multiprocessing.Barrier(${1:parties[}, ${2:action[}, ${3:timeout]]})"},
		{"trigger": "y-BaseManager\tmultiprocessing*", "contents": "multiprocessing.BaseManager(${1:[address[}, ${2:authkey]]})"},
		{"trigger": "y-BaseProxy\tmultiprocessing*", "contents": "multiprocessing.BaseProxy"},
		{"trigger": "y-BoundedSemaphore\tmultiprocessing*", "contents": "multiprocessing.BoundedSemaphore(${1:[value]})"},
		{"trigger": "y-BufferTooShort\tmultiprocessing*", "contents": "multiprocessing.BufferTooShort"},
		{"trigger": "y-Client\tmultiprocessing*", "contents": "multiprocessing.Client(${1:address[}, ${2:family[}, ${3:authenticate[}, ${4:authkey]]]})"},
		{"trigger": "y-Condition\tmultiprocessing*", "contents": "multiprocessing.Condition(${1:[lock]})"},
		{"trigger": "y-Connection\tmultiprocessing*", "contents": "multiprocessing.Connection"},
		{"trigger": "y-Event\tmultiprocessing*", "contents": "multiprocessing.Event"},
		{"trigger": "y-JoinableQueue\tmultiprocessing*", "contents": "multiprocessing.JoinableQueue(${1:[maxsize]})"},
		{"trigger": "y-Listener\tmultiprocessing*", "contents": "multiprocessing.Listener(${1:[address[}, ${2:family[}, ${3:backlog[}, ${4:authenticate[}, ${5:authkey]]]]]})"},
		{"trigger": "y-Lock\tmultiprocessing*", "contents": "multiprocessing.Lock"},
		{"trigger": "y-Manager\tmultiprocessing*", "contents": "multiprocessing.Manager(${1:})"},
		{"trigger": "y-Namespace\tmultiprocessing*", "contents": "multiprocessing.Namespace"},
		{"trigger": "y-Pipe\tmultiprocessing*", "contents": "multiprocessing.Pipe(${1:[duplex]})"},
		{"trigger": "y-Pool\tmultiprocessing*", "contents": "multiprocessing.Pool(${1:[processes[}, ${2:initializer[}, ${3:initargs[}, ${4:maxtasksperchild[}, ${5:context]]]]]})"},
		{"trigger": "y-Process\tmultiprocessing*", "contents": "multiprocessing.Process(${1:group=None}, ${2:target=None}, ${3:name=None}, ${4:args=}, ${5:})"},
		{"trigger": "y-ProcessError\tmultiprocessing*", "contents": "multiprocessing.ProcessError"},
		{"trigger": "y-Queue\tmultiprocessing*", "contents": "multiprocessing.Queue(${1:[maxsize]})"},
		{"trigger": "y-RLock\tmultiprocessing*", "contents": "multiprocessing.RLock"},
		{"trigger": "y-RawArray\tmultiprocessing*", "contents": "multiprocessing.RawArray(${1:typecode_or_type}, ${2:size_or_initializer})"},
		{"trigger": "y-RawValue\tmultiprocessing*", "contents": "multiprocessing.RawValue(${1:typecode_or_type}, ${2:*args})"},
		{"trigger": "y-Semaphore\tmultiprocessing*", "contents": "multiprocessing.Semaphore(${1:[value]})"},
		{"trigger": "y-SimpleQueue\tmultiprocessing*", "contents": "multiprocessing.SimpleQueue"},
		{"trigger": "y-SyncManager\tmultiprocessing*", "contents": "multiprocessing.SyncManager"},
		{"trigger": "y-TimeoutError\tmultiprocessing*", "contents": "multiprocessing.TimeoutError"},
		{"trigger": "y-Value\tmultiprocessing*", "contents": "multiprocessing.Value(${1:typecode_or_type}, ${2:*args}, ${3:lock=True})"},
		{"trigger": "y-active_children()\tmultiprocessing*", "contents": "multiprocessing.active_children(${1:})"},
		{"trigger": "y-answer_challenge()\tmultiprocessing*", "contents": "multiprocessing.answer_challenge(${1:connection}, ${2:authkey})"},
		{"trigger": "y-copy()\tmultiprocessing*", "contents": "multiprocessing.copy(${1:obj})"},
		{"trigger": "y-cpu_count()\tmultiprocessing*", "contents": "multiprocessing.cpu_count(${1:})"},
		{"trigger": "y-current_process()\tmultiprocessing*", "contents": "multiprocessing.current_process(${1:})"},
		{"trigger": "y-deliver_challenge()\tmultiprocessing*", "contents": "multiprocessing.deliver_challenge(${1:connection}, ${2:authkey})"},
		{"trigger": "y-freeze_support()\tmultiprocessing*", "contents": "multiprocessing.freeze_support(${1:})"},
		{"trigger": "y-get_all_start_methods()\tmultiprocessing*", "contents": "multiprocessing.get_all_start_methods(${1:})"},
		{"trigger": "y-get_context()\tmultiprocessing*", "contents": "multiprocessing.get_context(${1:method=None})"},
		{"trigger": "y-get_logger()\tmultiprocessing*", "contents": "multiprocessing.get_logger(${1:})"},
		{"trigger": "y-get_start_method()\tmultiprocessing*", "contents": "multiprocessing.get_start_method(${1:allow_none=False})"},
		{"trigger": "y-log_to_stderr()\tmultiprocessing*", "contents": "multiprocessing.log_to_stderr(${1:})"},
		{"trigger": "y-set_executable()\tmultiprocessing*", "contents": "multiprocessing.set_executable(${1:})"},
		{"trigger": "y-set_start_method()\tmultiprocessing*", "contents": "multiprocessing.set_start_method(${1:method})"},
		{"trigger": "y-synchronized()\tmultiprocessing*", "contents": "multiprocessing.synchronized(${1:obj[}, ${2:lock]})"},
		{"trigger": "y-wait()\tmultiprocessing*", "contents": "multiprocessing.wait(${1:object_list}, ${2:timeout=None})"}
	]
}