{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-BOM\tcodecs*", "contents": "codecs.BOM"},
		{"trigger": "y-BOM_BE\tcodecs*", "contents": "codecs.BOM_BE"},
		{"trigger": "y-BOM_LE\tcodecs*", "contents": "codecs.BOM_LE"},
		{"trigger": "y-BOM_UTF16\tcodecs*", "contents": "codecs.BOM_UTF16"},
		{"trigger": "y-BOM_UTF16_BE\tcodecs*", "contents": "codecs.BOM_UTF16_BE"},
		{"trigger": "y-BOM_UTF16_LE\tcodecs*", "contents": "codecs.BOM_UTF16_LE"},
		{"trigger": "y-BOM_UTF32\tcodecs*", "contents": "codecs.BOM_UTF32"},
		{"trigger": "y-BOM_UTF32_BE\tcodecs*", "contents": "codecs.BOM_UTF32_BE"},
		{"trigger": "y-BOM_UTF32_LE\tcodecs*", "contents": "codecs.BOM_UTF32_LE"},
		{"trigger": "y-BOM_UTF8\tcodecs*", "contents": "codecs.BOM_UTF8"},
		{"trigger": "y-CodecInfo\tcodecs*", "contents": "codecs.CodecInfo(${1:encode}, ${2:decode}, ${3:streamreader=None}, ${4:streamwriter=None}, ${5:incrementalencoder=None}, ${6:incrementaldecoder=None}, ${7:name=None})"},
		{"trigger": "y-EncodedFile\tcodecs*", "contents": "codecs.EncodedFile(${1:file}, ${2:data_encoding}, ${3:file_encoding=None}, ${4:errors='strict'})"},
		{"trigger": "y-IncrementalDecoder\tcodecs*", "contents": "codecs.IncrementalDecoder(${1:errors='strict'})"},
		{"trigger": "y-IncrementalEncoder\tcodecs*", "contents": "codecs.IncrementalEncoder(${1:errors='strict'})"},
		{"trigger": "y-StreamReader\tcodecs*", "contents": "codecs.StreamReader(${1:stream}, ${2:errors='strict'})"},
		{"trigger": "y-StreamReaderWriter\tcodecs*", "contents": "codecs.StreamReaderWriter(${1:stream}, ${2:Reader}, ${3:Writer}, ${4:errors})"},
		{"trigger": "y-StreamRecoder\tcodecs*", "contents": "codecs.StreamRecoder(${1:stream}, ${2:encode}, ${3:decode}, ${4:Reader}, ${5:Writer}, ${6:errors})"},
		{"trigger": "y-StreamWriter\tcodecs*", "contents": "codecs.StreamWriter(${1:stream}, ${2:errors='strict'})"},
		{"trigger": "y-ToASCII\tcodecs*", "contents": "codecs.ToASCII(${1:label})"},
		{"trigger": "y-ToUnicode\tcodecs*", "contents": "codecs.ToUnicode(${1:label})"},
		{"trigger": "y-backslashreplace_errors()\tcodecs*", "contents": "codecs.backslashreplace_errors(${1:exception})"},
		{"trigger": "y-decode()\tcodecs*", "contents": "codecs.decode(${1:input[}, ${2:errors]})"},
		{"trigger": "y-decode()\tcodecs*", "contents": "codecs.decode(${1:obj}, ${2:encoding='utf-8'}, ${3:errors='strict'})"},
		{"trigger": "y-encode()\tcodecs*", "contents": "codecs.encode(${1:input[}, ${2:errors]})"},
		{"trigger": "y-encode()\tcodecs*", "contents": "codecs.encode(${1:obj}, ${2:encoding='utf-8'}, ${3:errors='strict'})"},
		{"trigger": "y-getdecoder()\tcodecs*", "contents": "codecs.getdecoder(${1:encoding})"},
		{"trigger": "y-getencoder()\tcodecs*", "contents": "codecs.getencoder(${1:encoding})"},
		{"trigger": "y-getincrementaldecoder()\tcodecs*", "contents": "codecs.getincrementaldecoder(${1:encoding})"},
		{"trigger": "y-getincrementalencoder()\tcodecs*", "contents": "codecs.getincrementalencoder(${1:encoding})"},
		{"trigger": "y-getreader()\tcodecs*", "contents": "codecs.getreader(${1:encoding})"},
		{"trigger": "y-getstate()\tcodecs*", "contents": "codecs.getstate(${1:})"},
		{"trigger": "y-getwriter()\tcodecs*", "contents": "codecs.getwriter(${1:encoding})"},
		{"trigger": "y-ignore_errors()\tcodecs*", "contents": "codecs.ignore_errors(${1:exception})"},
		{"trigger": "y-iterdecode()\tcodecs*", "contents": "codecs.iterdecode(${1:iterator}, ${2:encoding}, ${3:errors='strict'}, ${4:**kwargs})"},
		{"trigger": "y-iterencode()\tcodecs*", "contents": "codecs.iterencode(${1:iterator}, ${2:encoding}, ${3:errors='strict'}, ${4:**kwargs})"},
		{"trigger": "y-lookup()\tcodecs*", "contents": "codecs.lookup(${1:encoding})"},
		{"trigger": "y-lookup_error()\tcodecs*", "contents": "codecs.lookup_error(${1:name})"},
		{"trigger": "y-nameprep()\tcodecs*", "contents": "codecs.nameprep(${1:label})"},
		{"trigger": "y-namereplace_errors()\tcodecs*", "contents": "codecs.namereplace_errors(${1:exception})"},
		{"trigger": "y-open()\tcodecs*", "contents": "codecs.open(${1:filename}, ${2:mode='r'}, ${3:encoding=None}, ${4:errors='strict'}, ${5:buffering=1})"},
		{"trigger": "y-register()\tcodecs*", "contents": "codecs.register(${1:search_function})"},
		{"trigger": "y-register_error()\tcodecs*", "contents": "codecs.register_error(${1:name}, ${2:error_handler})"},
		{"trigger": "y-replace_errors()\tcodecs*", "contents": "codecs.replace_errors(${1:exception})"},
		{"trigger": "y-setstate()\tcodecs*", "contents": "codecs.setstate(${1:state})"},
		{"trigger": "y-strict_errors()\tcodecs*", "contents": "codecs.strict_errors(${1:exception})"},
		{"trigger": "y-xmlcharrefreplace_errors()\tcodecs*", "contents": "codecs.xmlcharrefreplace_errors(${1:exception})"}
	]
}