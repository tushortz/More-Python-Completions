{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-DefragResult\turllib*", "contents": "urllib.parse.DefragResult(${1:url}, ${2:fragment})"},
		{"trigger": "y-DefragResultBytes\turllib*", "contents": "urllib.parse.DefragResultBytes(${1:url}, ${2:fragment})"},
		{"trigger": "y-ParseResult\turllib*", "contents": "urllib.parse.ParseResult(${1:scheme}, ${2:netloc}, ${3:path}, ${4:params}, ${5:query}, ${6:fragment})"},
		{"trigger": "y-ParseResultBytes\turllib*", "contents": "urllib.parse.ParseResultBytes(${1:scheme}, ${2:netloc}, ${3:path}, ${4:params}, ${5:query}, ${6:fragment})"},
		{"trigger": "y-SplitResult\turllib*", "contents": "urllib.parse.SplitResult(${1:scheme}, ${2:netloc}, ${3:path}, ${4:query}, ${5:fragment})"},
		{"trigger": "y-SplitResultBytes\turllib*", "contents": "urllib.parse.SplitResultBytes(${1:scheme}, ${2:netloc}, ${3:path}, ${4:query}, ${5:fragment})"},
		{"trigger": "y-geturl()\turllib*", "contents": "urllib.parse.geturl(${1:})"},
		{"trigger": "y-parse_qs()\turllib*", "contents": "urllib.parse.parse_qs(${1:qs}, ${2:keep_blank_values=False}, ${3:strict_parsing=False}, ${4:encoding='utf-8'}, ${5:errors='replace'})"},
		{"trigger": "y-parse_qsl()\turllib*", "contents": "urllib.parse.parse_qsl(${1:qs}, ${2:keep_blank_values=False}, ${3:strict_parsing=False}, ${4:encoding='utf-8'}, ${5:errors='replace'})"},
		{"trigger": "y-quote()\turllib*", "contents": "urllib.parse.quote(${1:string}, ${2:safe='/'}, ${3:encoding=None}, ${4:errors=None})"},
		{"trigger": "y-quote_from_bytes()\turllib*", "contents": "urllib.parse.quote_from_bytes(${1:bytes}, ${2:safe='/'})"},
		{"trigger": "y-quote_plus()\turllib*", "contents": "urllib.parse.quote_plus(${1:string}, ${2:safe=''}, ${3:encoding=None}, ${4:errors=None})"},
		{"trigger": "y-unquote()\turllib*", "contents": "urllib.parse.unquote(${1:string}, ${2:encoding='utf-8'}, ${3:errors='replace'})"},
		{"trigger": "y-unquote_plus()\turllib*", "contents": "urllib.parse.unquote_plus(${1:string}, ${2:encoding='utf-8'}, ${3:errors='replace'})"},
		{"trigger": "y-unquote_to_bytes()\turllib*", "contents": "urllib.parse.unquote_to_bytes(${1:string})"},
		{"trigger": "y-urldefrag()\turllib*", "contents": "urllib.parse.urldefrag(${1:url})"},
		{"trigger": "y-urlencode()\turllib*", "contents": "urllib.parse.urlencode(${1:query}, ${2:doseq=False}, ${3:safe=''}, ${4:encoding=None}, ${5:errors=None}, ${6:quote_via=quote_plus})"},
		{"trigger": "y-urljoin()\turllib*", "contents": "urllib.parse.urljoin(${1:base}, ${2:url}, ${3:allow_fragments=True})"},
		{"trigger": "y-urlparse()\turllib*", "contents": "urllib.parse.urlparse(${1:urlstring}, ${2:scheme=''}, ${3:allow_fragments=True})"},
		{"trigger": "y-urlsplit()\turllib*", "contents": "urllib.parse.urlsplit(${1:urlstring}, ${2:scheme=''}, ${3:allow_fragments=True})"},
		{"trigger": "y-urlunparse()\turllib*", "contents": "urllib.parse.urlunparse(${1:parts})"},
		{"trigger": "y-urlunsplit()\turllib*", "contents": "urllib.parse.urlunsplit(${1:parts})"}
	]
}