{
	"scope": "source.python, source.py, source.py3",
	"completions":
	[
		{"trigger": "y-ALERT_DESCRIPTION_HANDSHAKE_FAILURE\tssl*", "contents": "ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE"},
		{"trigger": "y-ALERT_DESCRIPTION_INTERNAL_ERROR\tssl*", "contents": "ssl.ALERT_DESCRIPTION_INTERNAL_ERROR"},
		{"trigger": "y-CERT_NONE\tssl*", "contents": "ssl.CERT_NONE"},
		{"trigger": "y-CERT_OPTIONAL\tssl*", "contents": "ssl.CERT_OPTIONAL"},
		{"trigger": "y-CERT_REQUIRED\tssl*", "contents": "ssl.CERT_REQUIRED"},
		{"trigger": "y-CHANNEL_BINDING_TYPES\tssl*", "contents": "ssl.CHANNEL_BINDING_TYPES"},
		{"trigger": "y-CLIENT_AUTH\tssl*", "contents": "ssl.CLIENT_AUTH"},
		{"trigger": "y-CertificateError\tssl*", "contents": "ssl.CertificateError"},
		{"trigger": "y-DER_cert_to_PEM_cert\tssl*", "contents": "ssl.DER_cert_to_PEM_cert(${1:DER_cert_bytes})"},
		{"trigger": "y-HAS_ALPN\tssl*", "contents": "ssl.HAS_ALPN"},
		{"trigger": "y-HAS_ECDH\tssl*", "contents": "ssl.HAS_ECDH"},
		{"trigger": "y-HAS_NPN\tssl*", "contents": "ssl.HAS_NPN"},
		{"trigger": "y-HAS_SNI\tssl*", "contents": "ssl.HAS_SNI"},
		{"trigger": "y-MemoryBIO\tssl*", "contents": "ssl.MemoryBIO"},
		{"trigger": "y-OPENSSL_VERSION\tssl*", "contents": "ssl.OPENSSL_VERSION"},
		{"trigger": "y-OPENSSL_VERSION_INFO\tssl*", "contents": "ssl.OPENSSL_VERSION_INFO"},
		{"trigger": "y-OPENSSL_VERSION_NUMBER\tssl*", "contents": "ssl.OPENSSL_VERSION_NUMBER"},
		{"trigger": "y-OP_ALL\tssl*", "contents": "ssl.OP_ALL"},
		{"trigger": "y-OP_CIPHER_SERVER_PREFERENCE\tssl*", "contents": "ssl.OP_CIPHER_SERVER_PREFERENCE"},
		{"trigger": "y-OP_NO_COMPRESSION\tssl*", "contents": "ssl.OP_NO_COMPRESSION"},
		{"trigger": "y-OP_NO_SSLv2\tssl*", "contents": "ssl.OP_NO_SSLv2"},
		{"trigger": "y-OP_NO_SSLv3\tssl*", "contents": "ssl.OP_NO_SSLv3"},
		{"trigger": "y-OP_NO_TLSv1\tssl*", "contents": "ssl.OP_NO_TLSv1"},
		{"trigger": "y-OP_NO_TLSv1_1\tssl*", "contents": "ssl.OP_NO_TLSv1_1"},
		{"trigger": "y-OP_NO_TLSv1_2\tssl*", "contents": "ssl.OP_NO_TLSv1_2"},
		{"trigger": "y-OP_SINGLE_DH_USE\tssl*", "contents": "ssl.OP_SINGLE_DH_USE"},
		{"trigger": "y-OP_SINGLE_ECDH_USE\tssl*", "contents": "ssl.OP_SINGLE_ECDH_USE"},
		{"trigger": "y-PEM_cert_to_DER_cert\tssl*", "contents": "ssl.PEM_cert_to_DER_cert(${1:PEM_cert_string})"},
		{"trigger": "y-PROTOCOL_SSLv23\tssl*", "contents": "ssl.PROTOCOL_SSLv23"},
		{"trigger": "y-PROTOCOL_SSLv2\tssl*", "contents": "ssl.PROTOCOL_SSLv2"},
		{"trigger": "y-PROTOCOL_SSLv3\tssl*", "contents": "ssl.PROTOCOL_SSLv3"},
		{"trigger": "y-PROTOCOL_TLSv1\tssl*", "contents": "ssl.PROTOCOL_TLSv1"},
		{"trigger": "y-PROTOCOL_TLSv1_1\tssl*", "contents": "ssl.PROTOCOL_TLSv1_1"},
		{"trigger": "y-PROTOCOL_TLSv1_2\tssl*", "contents": "ssl.PROTOCOL_TLSv1_2"},
		{"trigger": "y-RAND_add\tssl*", "contents": "ssl.RAND_add(${1:bytes}, ${2:entropy})"},
		{"trigger": "y-RAND_bytes\tssl*", "contents": "ssl.RAND_bytes(${1:num})"},
		{"trigger": "y-RAND_egd\tssl*", "contents": "ssl.RAND_egd(${1:path})"},
		{"trigger": "y-RAND_pseudo_bytes\tssl*", "contents": "ssl.RAND_pseudo_bytes(${1:num})"},
		{"trigger": "y-RAND_status\tssl*", "contents": "ssl.RAND_status(${1:})"},
		{"trigger": "y-SERVER_AUTH\tssl*", "contents": "ssl.SERVER_AUTH"},
		{"trigger": "y-SSLContext\tssl*", "contents": "ssl.SSLContext(${1:protocol})"},
		{"trigger": "y-SSLEOFError\tssl*", "contents": "ssl.SSLEOFError"},
		{"trigger": "y-SSLError\tssl*", "contents": "ssl.SSLError"},
		{"trigger": "y-SSLObject\tssl*", "contents": "ssl.SSLObject"},
		{"trigger": "y-SSLSocket\tssl*", "contents": "ssl.SSLSocket(${1:socket.socket})"},
		{"trigger": "y-SSLSyscallError\tssl*", "contents": "ssl.SSLSyscallError"},
		{"trigger": "y-SSLWantReadError\tssl*", "contents": "ssl.SSLWantReadError"},
		{"trigger": "y-SSLWantWriteError\tssl*", "contents": "ssl.SSLWantWriteError"},
		{"trigger": "y-SSLZeroReturnError\tssl*", "contents": "ssl.SSLZeroReturnError"},
		{"trigger": "y-VERIFY_CRL_CHECK_CHAIN\tssl*", "contents": "ssl.VERIFY_CRL_CHECK_CHAIN"},
		{"trigger": "y-VERIFY_CRL_CHECK_LEAF\tssl*", "contents": "ssl.VERIFY_CRL_CHECK_LEAF"},
		{"trigger": "y-VERIFY_DEFAULT\tssl*", "contents": "ssl.VERIFY_DEFAULT"},
		{"trigger": "y-VERIFY_X509_STRICT\tssl*", "contents": "ssl.VERIFY_X509_STRICT"},
		{"trigger": "y-VERIFY_X509_TRUSTED_FIRST\tssl*", "contents": "ssl.VERIFY_X509_TRUSTED_FIRST"},
		{"trigger": "y-cert_store_stats()\tssl*", "contents": "ssl.cert_store_stats(${1:})"},
		{"trigger": "y-cert_time_to_seconds()\tssl*", "contents": "ssl.cert_time_to_seconds(${1:cert_time})"},
		{"trigger": "y-check_hostname()\tssl*", "contents": "ssl.check_hostname()"},
		{"trigger": "y-cipher()\tssl*", "contents": "ssl.cipher(${1:})"},
		{"trigger": "y-compression()\tssl*", "contents": "ssl.compression(${1:})"},
		{"trigger": "y-context()\tssl*", "contents": "ssl.context()"},
		{"trigger": "y-create_default_context()\tssl*", "contents": "ssl.create_default_context(${1:purpose=Purpose.SERVER_AUTH}, ${2:cafile=None}, ${3:capath=None}, ${4:cadata=None})"},
		{"trigger": "y-do_handshake()\tssl*", "contents": "ssl.do_handshake(${1:})"},
		{"trigger": "y-enum_certificates()\tssl*", "contents": "ssl.enum_certificates(${1:store_name})"},
		{"trigger": "y-enum_crls()\tssl*", "contents": "ssl.enum_crls(${1:store_name})"},
		{"trigger": "y-get_ca_certs()\tssl*", "contents": "ssl.get_ca_certs(${1:binary_form=False})"},
		{"trigger": "y-get_channel_binding()\tssl*", "contents": "ssl.get_channel_binding(${1:cb_type=\"tls-unique\"})"},
		{"trigger": "y-get_default_verify_paths()\tssl*", "contents": "ssl.get_default_verify_paths(${1:})"},
		{"trigger": "y-get_server_certificate()\tssl*", "contents": "ssl.get_server_certificate(${1:addr}, ${2:ssl_version=PROTOCOL_SSLv23}, ${3:ca_certs=None})"},
		{"trigger": "y-getpeercert()\tssl*", "contents": "ssl.getpeercert(${1:binary_form=False})"},
		{"trigger": "y-load_cert_chain()\tssl*", "contents": "ssl.load_cert_chain(${1:certfile}, ${2:keyfile=None}, ${3:password=None})"},
		{"trigger": "y-load_default_certs()\tssl*", "contents": "ssl.load_default_certs(${1:purpose=Purpose.SERVER_AUTH})"},
		{"trigger": "y-load_dh_params()\tssl*", "contents": "ssl.load_dh_params(${1:dhfile})"},
		{"trigger": "y-load_verify_locations()\tssl*", "contents": "ssl.load_verify_locations(${1:cafile=None}, ${2:capath=None}, ${3:cadata=None})"},
		{"trigger": "y-match_hostname()\tssl*", "contents": "ssl.match_hostname(${1:cert}, ${2:hostname})"},
		{"trigger": "y-options()\tssl*", "contents": "ssl.options()"},
		{"trigger": "y-pending()\tssl*", "contents": "ssl.pending(${1:})"},
		{"trigger": "y-protocol()\tssl*", "contents": "ssl.protocol()"},
		{"trigger": "y-read()\tssl*", "contents": "ssl.read(${1:len=0}, ${2:buffer=None})"},
		{"trigger": "y-selected_alpn_protocol()\tssl*", "contents": "ssl.selected_alpn_protocol(${1:})"},
		{"trigger": "y-selected_npn_protocol()\tssl*", "contents": "ssl.selected_npn_protocol(${1:})"},
		{"trigger": "y-server_hostname()\tssl*", "contents": "ssl.server_hostname()"},
		{"trigger": "y-server_side()\tssl*", "contents": "ssl.server_side()"},
		{"trigger": "y-session_stats()\tssl*", "contents": "ssl.session_stats(${1:})"},
		{"trigger": "y-set_alpn_protocols()\tssl*", "contents": "ssl.set_alpn_protocols(${1:protocols})"},
		{"trigger": "y-set_ciphers()\tssl*", "contents": "ssl.set_ciphers(${1:ciphers})"},
		{"trigger": "y-set_default_verify_paths()\tssl*", "contents": "ssl.set_default_verify_paths(${1:})"},
		{"trigger": "y-set_ecdh_curve()\tssl*", "contents": "ssl.set_ecdh_curve(${1:curve_name})"},
		{"trigger": "y-set_npn_protocols()\tssl*", "contents": "ssl.set_npn_protocols(${1:protocols})"},
		{"trigger": "y-set_servername_callback()\tssl*", "contents": "ssl.set_servername_callback(${1:server_name_callback})"},
		{"trigger": "y-shared_ciphers()\tssl*", "contents": "ssl.shared_ciphers(${1:})"},
		{"trigger": "y-unwrap()\tssl*", "contents": "ssl.unwrap(${1:})"},
		{"trigger": "y-verify_flags()\tssl*", "contents": "ssl.verify_flags()"},
		{"trigger": "y-verify_mode()\tssl*", "contents": "ssl.verify_mode()"},
		{"trigger": "y-version()\tssl*", "contents": "ssl.version(${1:})"},
		{"trigger": "y-wrap_bio()\tssl*", "contents": "ssl.wrap_bio(${1:incoming}, ${2:outgoing}, ${3:server_side=False}, ${4:server_hostname=None})"},
		{"trigger": "y-wrap_socket()\tssl*", "contents": "ssl.wrap_socket(${1:sock}, ${2:keyfile=None}, ${3:certfile=None}, ${4:server_side=False}, ${5:cert_reqs=CERT_NONE}, ${6:ssl_version={see docs}}, ${7:ca_certs=None}, ${8:do_handshake_on_connect=True}, ${9:suppress_ragged_eofs=True}, ${10:ciphers=None})"},
		{"trigger": "y-wrap_socket()\tssl*", "contents": "ssl.wrap_socket(${1:sock}, ${2:server_side=False}, ${3:do_handshake_on_connect=True}, ${4:suppress_ragged_eofs=True}, ${5:server_hostname=None})"},
		{"trigger": "y-write()\tssl*", "contents": "ssl.write(${1:buf})"}
	]
}